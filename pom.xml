<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.woehlke.jakartaee</groupId>
	<artifactId>petclinic</artifactId>
	<packaging>war</packaging>
	<version>8.0.0-SNAPSHOT</version>

	<name>Jakarta EE Petclinic</name>
	<description>A JSF and Jakarta EE Version of Spring Petclinic and Update from Java EE 7 Petclinic.</description>
	<url>https://jakarta-ee-petclinic.github.io/jakartaee-petclinic/</url>
	<organization>
		<name>Jakarta-EE-Petclinic</name>
		<url>https://github.com/Jakarta-EE-Petclinic</url>
	</organization>
	<inceptionYear>2019</inceptionYear>

	<scm>
		<url>https://github.com/Jakarta-EE-Petclinic/jakartaee-petclinic.git</url>
		<connection>scm:git:git@github.com:Jakarta-EE-Petclinic/jakartaee-petclinic.git</connection>
		<developerConnection>scm:git:git@github.com:Jakarta-EE-Petclinic/jakartaee-petclinic.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<issueManagement>
		<url>https://github.com/Jakarta-EE-Petclinic/jakartaee-petclinic/issues</url>
		<system>GitHub</system>
	</issueManagement>
	<distributionManagement>
		<site>
			<id>localhost</id>
			<url>file:///${user.home}/public_html/p/jakartaee-petclinic</url>
		</site>
	</distributionManagement>

	<properties>
		<java.version>13</java.version>
		<!--- Build Infrastructure -->
		<version.maven>3.6.3</version.maven>
		<version.org.apache.maven.scm>1.11.2</version.org.apache.maven.scm>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<!-- general -->
		<version.log4j>2.12.1</version.log4j>
		<version.commons-logging>1.2</version.commons-logging>
		<version.commons-lang>2.6</version.commons-lang>
		<version.commons-io>2.4</version.commons-io>
		<version.com.google.guava.guava>27.0.1-jre</version.com.google.guava.guava>
		<version.com.google.auto.auto-common>0.10</version.com.google.auto.auto-common>
		<version.com.google.code.findbugs.jFormatString>3.0.0</version.com.google.code.findbugs.jFormatString>
		<version.com.google.code.gson.gson>2.8.6</version.com.google.code.gson.gson>
		<version.org.glassfish.javax.json>1.1</version.org.glassfish.javax.json>
		<version.org.eclipse.yasson>1.0</version.org.eclipse.yasson>
		<version.org.owasp.encoder.encoder>1.2.2</version.org.owasp.encoder.encoder>
		<version.org.owasp.esapi.esapi>2.2.0.0</version.org.owasp.esapi.esapi>
		<version.com.puppycrawl.tools.checkstyle>8.29</version.com.puppycrawl.tools.checkstyle>
		<version.xml-apis>1.3.04</version.xml-apis>
		<version.org.reflections.reflections>0.9.9</version.org.reflections.reflections>
		<version.org.pcollections.pcollections>2.1.2</version.org.pcollections.pcollections>
		<version.net.jcip.jcip-annotations>1.0</version.net.jcip.jcip-annotations>
		<version.org.apache.httpcomponents.httpcore>4.4.12</version.org.apache.httpcomponents.httpcore>
		<version.org.apache.httpcomponents.httpclient>4.5.10</version.org.apache.httpcomponents.httpclient>

		<!-- jakartaee -->
		<version.jakartaee-api>8.0.0</version.jakartaee-api>
		<version.jakarta-persistence-api>2.2.3</version.jakarta-persistence-api>
		<version.jakarta.messaging-api>2.0.3</version.jakarta.messaging-api>
		<version.jakarta.enterprise.deploy-api>1.7.2</version.jakarta.enterprise.deploy-api>
		<version.jakarta.xml.registry-api>1.0.10</version.jakarta.xml.registry-api>
		<version.jakarta.xml.rpc-api>1.1.4</version.jakarta.xml.rpc-api>
		<!-- Testing -->
		<version.junit>4.12</version.junit>
		<version.dbunit>2.5.3</version.dbunit>
		<version.selenium>3.7.1</version.selenium>
		<version.arquillian_core>1.4.1.Final</version.arquillian_core>
		<version.arquillian_drone>2.5.1</version.arquillian_drone>
		<version.arquillian_universe>1.2.0.2</version.arquillian_universe>
		<version.org.jboss.arquillian.graphene.graphene-webdriver-imple>2.3.2</version.org.jboss.arquillian.graphene.graphene-webdriver-imple>
		<version.arquillian_warp>1.0.0</version.arquillian_warp>
		<version.arquillian_recorder>1.1.6.Final</version.arquillian_recorder>
		<version.arquillian_rest>1.0.0.Alpha4</version.arquillian_rest>
		<version.shrinkwrap>1.2.6</version.shrinkwrap>
		<version.shrinkwrap_descriptors>2.0.0</version.shrinkwrap_descriptors>
		<version.shrinkwrap_resolvers>3.1.3</version.shrinkwrap_resolvers>
		<version.org.jboss.arquillian.graphene.graphene-webdriver-impl>2.3.2</version.org.jboss.arquillian.graphene.graphene-webdriver-impl>

		<!-- DB -->
		<version.postgresql.driver>42.2.11</version.postgresql.driver>
		<version.derby.driver>10.15.2.0</version.derby.driver>
		<version.h2.database>1.4.200</version.h2.database>
		<version.hibernate-search>5.10.5.Final</version.hibernate-search>
		<!-- JSF -->
		<version.org.primefaces.primefaces>7.0</version.org.primefaces.primefaces>
		<version.org.primefaces.themes.all-themes>1.0.10</version.org.primefaces.themes.all-themes>
		<version.org.primefaces.extensions.primefaces-arquillian>7.0.0</version.org.primefaces.extensions.primefaces-arquillian>
		<version.org.omnifaces.arquillian-primefaces>0.3</version.org.omnifaces.arquillian-primefaces>
		<!-- Frontend -->
		<version.webjars.jquery>3.4.1</version.webjars.jquery>
		<version.webjars.bootstrap>4.3.1</version.webjars.bootstrap>
		<version.webjars.font-awesome>5.10.1</version.webjars.font-awesome>
		<!-- API -->
		<version.org.apache.cxf>3.3.5</version.org.apache.cxf>
		<!-- Plugin Versions -->
		<version.maven-pmd-plugin.version.pmd>6.22.0</version.maven-pmd-plugin.version.pmd>
		<version.maven-pmd-plugin>3.13.0</version.maven-pmd-plugin>
		<version.maven-enforcer-plugin>3.0.0-M3</version.maven-enforcer-plugin>
		<version.maven-dependency-plugin>3.1.2</version.maven-dependency-plugin>
		<version.maven-clean-plugin>3.1.0</version.maven-clean-plugin>
		<version.maven-compiler-plugin>3.8.1</version.maven-compiler-plugin>
		<version.maven-resources-plugin>3.1.0</version.maven-resources-plugin>
		<version.maven-source-plugin>3.2.1</version.maven-source-plugin>
		<version.maven-install-plugin>3.0.0-M1</version.maven-install-plugin>
		<version.maven-war-plugin>3.2.3</version.maven-war-plugin>
		<version.maven-surefire-plugin>3.0.0-M4</version.maven-surefire-plugin>
		<version.maven-surefire-plugin.junit4>3.0.0-M4</version.maven-surefire-plugin.junit4>
		<version.maven-failsafe-plugin>3.0.0-M4</version.maven-failsafe-plugin>
		<version.maven-invoker-plugin>3.2.1</version.maven-invoker-plugin>
		<version.maven-javadoc-plugin>3.2.0</version.maven-javadoc-plugin>
		<version.maven-shade-plugin>3.2.2</version.maven-shade-plugin>
		<version.maven-jar-plugin>3.2.0</version.maven-jar-plugin>
		<version.maven-assembly-plugin>3.2.0</version.maven-assembly-plugin>
		<version.maven-deploy-plugin>3.0.0-M1</version.maven-deploy-plugin>
		<version.maven-help-plugins>3.2.0</version.maven-help-plugins>
		<version.maven-toolchains-plugin>3.0.0</version.maven-toolchains-plugin>
		<version.maven-checkstyle-plugin>3.1.1</version.maven-checkstyle-plugin>
		<version.lombok-maven-plugin>1.18.12.0</version.lombok-maven-plugin>
		<version.org.projectlombok.lombok>1.18.12</version.org.projectlombok.lombok>
		<version.jaxb2-maven-plugin>2.5.0</version.jaxb2-maven-plugin>
		<version.docker-compose-maven-plugin>3.0.0</version.docker-compose-maven-plugin>
		<version.maven-release-plugin>3.0.0-M1</version.maven-release-plugin>
		<version.maven-site-plugin>3.9.0</version.maven-site-plugin>
		<version.maven-project-info-reports-plugin>3.0.0</version.maven-project-info-reports-plugin>
		<version.maven-checkstyle-plugin>3.1.1</version.maven-checkstyle-plugin>
		<version.findbugs-maven-plugin>3.0.5</version.findbugs-maven-plugin>
		<version.maven-jxr-plugin>3.0.0</version.maven-jxr-plugin>
		<version.maven-pmd-plugin>3.13.0</version.maven-pmd-plugin>
		<version.maven-surefire-report-plugin>3.0.0-M4</version.maven-surefire-report-plugin>
		<version.org.apache.maven.skins.maven-default-skin>1.3</version.org.apache.maven.skins.maven-default-skin>
		<!-- Java EE and Jakarta EE Application Server: Wildfly, OpenLiberty, Glassfish -->
		<version.jakartaee8.server.wildfly.arquillian>2.2.0.Final</version.jakartaee8.server.wildfly.arquillian>
		<version.jakartaee8.server.openliberty.arquillian>1.0.6</version.jakartaee8.server.openliberty.arquillian>
		<!-- OpenLiberty -->
		<version.jakartaee8.server.openliberty>20.0.0.3</version.jakartaee8.server.openliberty>
		<runtime.jakartaee8.server.openliberty.remote>${user.home}/j/srv/openliberty-${version.jakartaee8.server.openliberty}/wlp</runtime.jakartaee8.server.openliberty.remote>
		<runtime.jakartaee8.server.openliberty.ServerName>petclinicServer</runtime.jakartaee8.server.openliberty.ServerName>
		<version.liberty-maven-plugin>3.2</version.liberty-maven-plugin>
		<!-- Wildfly -->
		<version.jakartaee8.server.wildfly>17.0.1.Final</version.jakartaee8.server.wildfly>
		<runtime.jakartaee8.server.wildfly.remote>${user.home}/j/srv/wildfly-${version.jakartaee8.server.wildfly}</runtime.jakartaee8.server.wildfly.remote>
		<version.wildfly-maven-plugin>2.0.1.Final</version.wildfly-maven-plugin>
		<!-- Glassfish -->
		<version.jakartaee8.server.glassfish>5.1.0</version.jakartaee8.server.glassfish>
		<!-- Config -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<failOnMissingWebXml>false</failOnMissingWebXml>
		<skipIntegrationTests>false</skipIntegrationTests>
		<webdriverBrowser>chrome</webdriverBrowser>
		<endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
	</properties>

	<repositories>
		<repository>
			<id>central</id>
			<name>Central Repository</name>
			<url>https://repo1.maven.org/maven2/</url>
			<releases><enabled>true</enabled></releases>
			<snapshots><enabled>false</enabled></snapshots>
		</repository>
		<repository>
			<id>jcenter</id>
			<name>JCenter Repository</name>
			<url>https://jcenter.bintray.com/</url>
			<releases><enabled>true</enabled></releases>
			<snapshots><enabled>false</enabled></snapshots>
		</repository>
		<repository>
			<id>jboss-releases</id>
			<name>JBoss Releases Repository</name>
			<url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
		</repository>
		<repository>
			<id>jboss-thirdparty-releases</id>
			<name>JBoss 3rd-party Repository</name>
			<url>https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/</url>
		</repository>
		<repository>
			<id>sonatype-releases</id>
			<name>Sonatype Repository</name>
			<url>https://oss.sonatype.org/content/repositories/releases/</url>
		</repository>
		<repository>
			<id>jboss-public</id>
			<name>JBoss Public Repository</name>
			<url>https://repository.jboss.org/nexus/content/repositories/public/</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>
		<repository>
			<id>redhat-ga</id>
			<name>Redhat GA Repository</name>
			<url>https://maven.repository.redhat.com/ga/</url>
			<releases><enabled>true</enabled></releases>
			<snapshots><enabled>false</enabled></snapshots>
		</repository>
		<repository>
			<id>primefaces</id>
			<name>Primefaces Repository</name>
			<url>https://repository.primefaces.org</url>
		</repository>
		<!--
		<repository>
			<id>java.net-public</id>
			<name>Maven Java Net Snapshots and Releases</name>
			<url>https://maven.java.net/content/groups/public/</url>
		</repository>
		<repository>
			<id>Alfresco</id>
			<name>Alfresco Repository</name>
			<url>https://artifacts.alfresco.com/nexus/content/repositories/public/</url>
		</repository>
		-->
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>Central</id>
			<name>Central Repository</name>
			<url>https://repo1.maven.org/maven2/</url>
		</pluginRepository>
		<pluginRepository>
			<id>primefaces-repo</id>
			<name>PrimeFaces Maven Repository</name>
			<url>https://repository.primefaces.org</url>
		</pluginRepository>
		<pluginRepository>
			<id>java.net-public</id>
			<name>Maven Java Net Snapshots and Releases</name>
			<url>https://maven.java.net/content/groups/public/</url>
		</pluginRepository>
		<pluginRepository>
			<id>jboss-3rd-party-repository</id>
			<name>JBoss 3rd-party Repository</name>
			<url>https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/</url>
		</pluginRepository>
		<pluginRepository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Maven Repository Group</name>
			<url>https://repository.jboss.org/nexus/content/groups/public</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>Alfresco</id>
			<name>Alfresco Repository</name>
			<url>https://artifacts.alfresco.com/nexus/content/repositories/public/</url>
		</pluginRepository>
	</pluginRepositories>

	<dependencyManagement>
		<dependencies>
			<!-- Jakarta EE 8 API -->
			<dependency>
				<groupId>jakarta.platform</groupId>
				<artifactId>jakartaee-api-parent</artifactId>
				<version>${version.jakartaee-api}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>jakarta.platform</groupId>
				<artifactId>jakarta.jakartaee-bom</artifactId>
				<version>${version.jakartaee-api}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>jakarta.platform</groupId>
				<artifactId>jakarta.jakartaee-api</artifactId>
				<version>${version.jakartaee-api}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>jakarta.platform</groupId>
				<artifactId>jakarta.jakartaee-web-api</artifactId>
				<version>${version.jakartaee-api}</version>
				<scope>provided</scope>
			</dependency>

			<!-- Integration Testing with Arquillian -->
			<dependency>
				<groupId>org.arquillian</groupId>
				<artifactId>arquillian-universe</artifactId>
				<version>${version.arquillian_universe}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.jboss.shrinkwrap</groupId>
				<artifactId>shrinkwrap-bom</artifactId>
				<version>${version.shrinkwrap}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.shrinkwrap.descriptors</groupId>
				<artifactId>shrinkwrap-descriptors-bom</artifactId>
				<version>${version.shrinkwrap_descriptors}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.shrinkwrap.resolver</groupId>
				<artifactId>shrinkwrap-resolver-bom</artifactId>
				<version>${version.shrinkwrap_resolvers}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- Web Profile -->
			<!--
			<dependency>
				<groupId>jakarta.servlet</groupId>
				<artifactId>jakarta.servlet-api</artifactId>
				<version>${jakarta.servlet-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.servlet.jsp</groupId>
				<artifactId>jakarta.servlet.jsp-api</artifactId>
				<version>${jakarta.servlet.jsp-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.el</groupId>
				<artifactId>jakarta.el-api</artifactId>
				<version>${jakarta.el-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.servlet.jsp.jstl</groupId>
				<artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
				<version>${jakarta.servlet.jsp.jstl-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.faces</groupId>
				<artifactId>jakarta.faces-api</artifactId>
				<version>${jakarta.faces-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.ws.rs</groupId>
				<artifactId>jakarta.ws.rs-api</artifactId>
				<version>${jakarta.ws.rs-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.websocket</groupId>
				<artifactId>jakarta.websocket-api</artifactId>
				<version>${jakarta.websocket-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.json</groupId>
				<artifactId>jakarta.json-api</artifactId>
				<version>${jakarta.json-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.json.bind</groupId>
				<artifactId>jakarta.json.bind-api</artifactId>
				<version>${jakarta.json.bind-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.annotation</groupId>
				<artifactId>jakarta.annotation-api</artifactId>
				<version>${jakarta.annotation-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.ejb</groupId>
				<artifactId>jakarta.ejb-api</artifactId>
				<version>${jakarta.ejb-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.transaction</groupId>
				<artifactId>jakarta.transaction-api</artifactId>
				<version>${jakarta.transaction-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.persistence</groupId>
				<artifactId>jakarta.persistence-api</artifactId>
				<version>${jakarta-persistence-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.validation</groupId>
				<artifactId>jakarta.validation-api</artifactId>
				<version>${jakarta.validation-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.interceptor</groupId>
				<artifactId>jakarta.interceptor-api</artifactId>
				<version>${jakarta.interceptor-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.enterprise</groupId>
				<artifactId>jakarta.enterprise.cdi-api</artifactId>
				<version>${jakarta.enterprise.cdi-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.inject</groupId>
				<artifactId>jakarta.inject-api</artifactId>
				<version>${jakarta.inject.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.security.auth.message</groupId>
				<artifactId>jakarta.security.auth.message-api</artifactId>
				<version>${jakarta.security.auth.message-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.security.enterprise</groupId>
				<artifactId>jakarta.security.enterprise-api</artifactId>
				<version>${jakarta.security.enterprise-api.version}</version>
			</dependency>
-->
			<!-- Full Platform -->
			<!--
			<dependency>
				<groupId>jakarta.jms</groupId>
				<artifactId>jakarta.jms-api</artifactId>
				<version>${jakarta.messaging-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.mail</groupId>
				<artifactId>jakarta.mail-api</artifactId>
				<version>${jakarta.mail-api.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.mail</groupId>
				<artifactId>jakarta.mail</artifactId>
				<version>${jakarta.mail-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.resource</groupId>
				<artifactId>jakarta.resource-api</artifactId>
				<version>${jakarta.resource-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.management.j2ee</groupId>
				<artifactId>jakarta.management.j2ee-api</artifactId>
				<version>${jakarta.management.j2ee-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.authorization</groupId>
				<artifactId>jakarta.authorization-api</artifactId>
				<version>${jakarta.authorization-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.enterprise.concurrent</groupId>
				<artifactId>jakarta.enterprise.concurrent-api</artifactId>
				<version>${jakarta.enterprise.concurrent-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.batch</groupId>
				<artifactId>jakarta.batch-api</artifactId>
				<version>${jakarta.batch-api.version}</version>
			</dependency>
-->
			<!-- Optional APIs -->
			<!--
			<dependency>
				<groupId>jakarta.enterprise.deploy</groupId>
				<artifactId>jakarta.enterprise.deploy-api</artifactId>
				<version>${jakarta.enterprise.deploy-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.xml.registry</groupId>
				<artifactId>jakarta.xml.registry-api</artifactId>
				<version>${jakarta.xml.registry-api.version}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.xml.rpc</groupId>
				<artifactId>jakarta.xml.rpc-api</artifactId>
				<version>${jakarta.xml.rpc-api.version}</version>
			</dependency>
			-->
			<!--
			<dependency>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
					<version>1.4.01</version>
					<scope>test</scope>
			</dependency>
			-->

			<!-- logging -->
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${version.commons-logging}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${version.commons-lang}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-bom</artifactId>
				<version>${version.log4j}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${version.log4j}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>${version.log4j}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-slf4j-impl</artifactId>
				<version>${version.log4j}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-to-slf4j</artifactId>
				<version>${version.log4j}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-web</artifactId>
				<version>${version.log4j}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-appserver</artifactId>
				<version>${version.log4j}</version>
			</dependency>

			<!-- JSF PrimeFaces -->
			<dependency>
				<groupId>org.primefaces</groupId>
				<artifactId>primefaces</artifactId>
				<version>${version.org.primefaces.primefaces}</version>
			</dependency>
			<dependency>
				<groupId>org.primefaces.themes</groupId>
				<artifactId>all-themes</artifactId>
				<version>${version.org.primefaces.themes.all-themes}</version>
			</dependency>

			<!-- Search -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-search-engine</artifactId>
				<version>${version.hibernate-search}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-search-orm</artifactId>
				<version>${version.hibernate-search}</version>
			</dependency>
			<!-- RS -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-rs-client</artifactId>
				<version>${version.org.apache.cxf}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-rs-extension-providers</artifactId>
				<version>${version.org.apache.cxf}</version>
				<scope>test</scope>
			</dependency>
			<!-- Frontend webjars for HTML, CSS and JS -->
			<dependency>
				<groupId>org.webjars</groupId>
				<artifactId>jquery</artifactId>
				<version>${version.webjars.jquery}</version>
			</dependency>
			<dependency>
				<groupId>org.webjars</groupId>
				<artifactId>bootstrap</artifactId>
				<version>${version.webjars.bootstrap}</version>
			</dependency>
			<dependency>
				<groupId>org.webjars</groupId>
				<artifactId>font-awesome</artifactId>
				<version>${version.webjars.font-awesome}</version>
			</dependency>
			<!-- unknown -->
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${version.commons-io}</version>
			</dependency>
			<dependency>
				<groupId>org.owasp.encoder</groupId>
				<artifactId>encoder</artifactId>
				<version>${version.org.owasp.encoder.encoder}</version>
			</dependency>
			<dependency>
				<groupId>org.owasp.esapi</groupId>
				<artifactId>esapi</artifactId>
				<version>${version.org.owasp.esapi.esapi}</version>
			</dependency>
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${version.postgresql.driver}</version>
			</dependency>
			<!-- TODO: for what is this: -->

			<dependency>
				<groupId>org.eclipse</groupId>
				<artifactId>yasson</artifactId>
				<version>${version.org.eclipse.yasson}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish</groupId>
				<artifactId>javax.json</artifactId>
				<version>${version.org.glassfish.javax.json}</version>
			</dependency>
			<dependency>
				<groupId>com.puppycrawl.tools</groupId>
				<artifactId>checkstyle</artifactId>
				<version>${version.com.puppycrawl.tools.checkstyle}</version>
			</dependency>

			<!-- Drivers TODO: https://github.com/arquillian/arquillian-selenium-bom/pull/28  -->
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-chrome-driver</artifactId>
				<version>${version.selenium}</version>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-firefox-driver</artifactId>
				<version>${version.selenium}</version>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-ie-driver</artifactId>
				<version>${version.selenium}</version>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-edge-driver</artifactId>
				<version>${version.selenium}</version>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-safari-driver</artifactId>
				<version>${version.selenium}</version>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-remote-driver</artifactId>
				<version>${version.selenium}</version>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-opera-driver</artifactId>
				<version>${version.selenium}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish.main.extras</groupId>
				<artifactId>glassfish-embedded-all</artifactId>
				<version>${version.jakartaee8.server.glassfish}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.glassfish.main.extras</groupId>
				<artifactId>javaee-pom</artifactId>
				<version>${version.jakartaee8.server.glassfish}</version>
				<type>pom</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.glassfish.main.extras</groupId>
				<artifactId>javaee</artifactId>
				<version>${version.jakartaee8.server.glassfish}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.derby</groupId>
				<artifactId>derby</artifactId>
				<version>${version.derby.driver}</version>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${version.h2.database}</version>
			</dependency>
		<!--- added on 18.03.2020 by tw -->
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-scm-plugin</artifactId>
			<version>${version.org.apache.maven.scm}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.scm</groupId>
			<artifactId>maven-scm-provider-svnexe</artifactId>
			<version>${version.org.apache.maven.scm}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.scm</groupId>
			<artifactId>maven-scm-provider-svn-commons</artifactId>
			<version>${version.org.apache.maven.scm}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.scm</groupId>
			<artifactId>maven-scm-provider-gitexe</artifactId>
			<version>${version.org.apache.maven.scm}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.scm</groupId>
			<artifactId>maven-scm-provider-git-commons</artifactId>
			<version>${version.org.apache.maven.scm}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.scm</groupId>
			<artifactId>maven-scm-manager-plexus</artifactId>
			<version>${version.org.apache.maven.scm}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.scm</groupId>
			<artifactId>maven-scm-client</artifactId>
			<version>${version.org.apache.maven.scm}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.scm</groupId>
			<artifactId>maven-scm-providers-standard</artifactId>
			<version>${version.org.apache.maven.scm}</version>
			<type>pom</type>
		</dependency>
			<!-- JSF and PrimeFaces Arquillian Tests -->
			<dependency>
				<groupId>net.jcip</groupId>
				<artifactId>jcip-annotations</artifactId>
				<version>${version.net.jcip.jcip-annotations}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.primefaces.extensions</groupId>
				<artifactId>primefaces-arquillian</artifactId>
				<version>${version.org.primefaces.extensions.primefaces-arquillian}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.omnifaces</groupId>
				<artifactId>arquillian-primefaces</artifactId>
				<version>${version.org.omnifaces.arquillian-primefaces}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.graphene</groupId>
				<artifactId>graphene-webdriver</artifactId>
				<version>${version.org.jboss.arquillian.graphene.graphene-webdriver-impl}</version>
				<type>pom</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.graphene</groupId>
				<artifactId>graphene-webdriver-impl</artifactId>
				<version>${version.org.jboss.arquillian.graphene.graphene-webdriver-impl}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${version.junit}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${version.org.projectlombok.lombok}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.maven.skins</groupId>
				<artifactId>maven-default-skin</artifactId>
				<version>${version.org.apache.maven.skins.maven-default-skin}</version>
				<scope>provided</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- JSF -->
		<dependency>
			<groupId>org.primefaces</groupId>
			<artifactId>primefaces</artifactId>
		</dependency>
		<dependency>
			<groupId>org.primefaces.themes</groupId>
			<artifactId>all-themes</artifactId>
		</dependency>
		<!-- Search -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-search-engine</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-search-orm</artifactId>
		</dependency>
		<!-- Frontend webjars for HTML, CSS and JS -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>font-awesome</artifactId>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
		</dependency>
		<!-- unknown -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		<dependency>
			<groupId>org.owasp.encoder</groupId>
			<artifactId>encoder</artifactId>
		</dependency>
		<dependency>
			<groupId>org.owasp.esapi</groupId>
			<artifactId>esapi</artifactId>
		</dependency>
		<!-- provided Jakarta EE APIs -->

		<dependency>
			<groupId>jakarta.platform</groupId>
			<artifactId>jakarta.jakartaee-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.platform</groupId>
			<artifactId>jakarta.jakartaee-web-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!--
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.servlet.jsp</groupId>
			<artifactId>jakarta.servlet.jsp-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.el</groupId>
			<artifactId>jakarta.el-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.servlet.jsp.jstl</groupId>
			<artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.faces</groupId>
			<artifactId>jakarta.faces-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.ws.rs</groupId>
			<artifactId>jakarta.ws.rs-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.websocket</groupId>
			<artifactId>jakarta.websocket-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.json</groupId>
			<artifactId>jakarta.json-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.json.bind</groupId>
			<artifactId>jakarta.json.bind-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.annotation</groupId>
			<artifactId>jakarta.annotation-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.ejb</groupId>
			<artifactId>jakarta.ejb-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.transaction</groupId>
			<artifactId>jakarta.transaction-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.persistence</groupId>
			<artifactId>jakarta.persistence-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.validation</groupId>
			<artifactId>jakarta.validation-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.interceptor</groupId>
			<artifactId>jakarta.interceptor-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.enterprise</groupId>
			<artifactId>jakarta.enterprise.cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.inject</groupId>
			<artifactId>jakarta.inject-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.security.auth.message</groupId>
			<artifactId>jakarta.security.auth.message-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.security.enterprise</groupId>
			<artifactId>jakarta.security.enterprise-api</artifactId>
			<scope>provided</scope>
		</dependency>
		-->
		<!--  Full Platform  -->
		<!--
		<dependency>
			<groupId>jakarta.jms</groupId>
			<artifactId>jakarta.jms-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.mail</groupId>
			<artifactId>jakarta.mail-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>jakarta.mail</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.resource</groupId>
			<artifactId>jakarta.resource-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.management.j2ee</groupId>
			<artifactId>jakarta.management.j2ee-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.authorization</groupId>
			<artifactId>jakarta.authorization-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.enterprise.concurrent</groupId>
			<artifactId>jakarta.enterprise.concurrent-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.batch</groupId>
			<artifactId>jakarta.batch-api</artifactId>
			<scope>provided</scope>
		</dependency>
		-->
		<!--  Optional APIs  -->
		<!--
		<dependency>
			<groupId>jakarta.enterprise.deploy</groupId>
			<artifactId>jakarta.enterprise.deploy-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.xml.registry</groupId>
			<artifactId>jakarta.xml.registry-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.xml.rpc</groupId>
			<artifactId>jakarta.xml.rpc-api</artifactId>
			<scope>provided</scope>
		</dependency>
		-->
		<dependency>
			<groupId>net.jcip</groupId>
			<artifactId>jcip-annotations</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.primefaces.extensions</groupId>
			<artifactId>primefaces-arquillian</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.omnifaces</groupId>
			<artifactId>arquillian-primefaces</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.graphene</groupId>
			<artifactId>graphene-webdriver-impl</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>${project.artifactId}</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${version.maven-enforcer-plugin}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${version.maven-dependency-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${version.maven-clean-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${version.maven-compiler-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${version.maven-source-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${version.maven-javadoc-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${version.maven-resources-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${version.maven-install-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.projectlombok</groupId>
					<artifactId>lombok-maven-plugin</artifactId>
					<version>${version.lombok-maven-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${version.maven-war-plugin}</version>
				</plugin>
				<plugin>
					<groupId>io.openliberty.tools</groupId>
					<artifactId>liberty-maven-plugin</artifactId>
					<version>${version.liberty-maven-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.surefire</groupId>
					<artifactId>surefire-junit4</artifactId>
					<version>${version.maven-surefire-plugin.junit4}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${version.maven-surefire-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${version.maven-failsafe-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${version.maven-shade-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${version.maven-jar-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${version.maven-assembly-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${version.maven-deploy-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-help-plugin</artifactId>
					<version>${version.maven-help-plugins}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-toolchains-plugin</artifactId>
					<version>${version.maven-toolchains-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-scm-plugin</artifactId>
					<version>${version.org.apache.maven.scm}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${version.maven-release-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${version.maven-site-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>${version.maven-project-info-reports-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${version.maven-checkstyle-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>${version.findbugs-maven-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jxr-plugin</artifactId>
					<version>${version.maven-jxr-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${version.maven-pmd-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${version.maven-surefire-report-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-invoker-plugin</artifactId>
					<version>${version.maven-invoker-plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jaxb2-maven-plugin</artifactId>
					<version>${version.jaxb2-maven-plugin}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<bannedPlugins>
									<level>ERROR</level>
									<excludes>
										<exclude>org.apache.maven.plugins:maven-verifier-plugin</exclude>
									</excludes>
									<message>Please consider using the maven-invoker-plugin (http://maven.apache.org/plugins/maven-invoker-plugin/)!</message>
								</bannedPlugins>
								<requireMavenVersion>
									<version>${version.maven}</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<version>${java.version}</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-invoker-plugin</artifactId>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>install</goal>
							<goal>run</goal>
						</goals>
						<configuration>
							<settingsFile>src/it/settings.xml</settingsFile>
							<cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
							<localRepositoryPath>${project.build.directory}/it-repo</localRepositoryPath>
							<postBuildHookScript>verify</postBuildHookScript> <!-- no extension required -->
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>

		<profile>
			<id>browser-chrome</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<webdriverBrowser>chrome</webdriverBrowser>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-chrome-driver</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
		<!-- browser-firefox< -->
		<profile>
			<id>browser-firefox</id>
			<properties>
				<webdriverBrowser>firefox</webdriverBrowser>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-firefox-driver</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
		<!-- browser-safari -->
		<profile>
			<id>browser-safari</id>
			<properties>
				<webdriverBrowser>safari</webdriverBrowser>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-safari-driver</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
		<!-- browser-opera -->
		<profile>
			<id>browser-opera</id>
			<properties>
				<webdriverBrowser>opera</webdriverBrowser>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-opera-driver</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>tests-skip</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<skipIntegrationTests>true</skipIntegrationTests>
			</properties>
		</profile>

		<profile>
			<id>tests-run</id>
			<properties>
				<skipIntegrationTests>false</skipIntegrationTests>
			</properties>
			<dependencyManagement>
				<dependencies>
					<!-- Integration Testing with Arquillian -->
					<dependency>
						<groupId>org.apache.maven</groupId>
						<artifactId>maven-aether-provider</artifactId>
						<version>${version.maven}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.apache.maven</groupId>
						<artifactId>maven-model</artifactId>
						<version>${version.maven}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.apache.maven</groupId>
						<artifactId>maven-model-builder</artifactId>
						<version>${version.maven}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.apache.maven</groupId>
						<artifactId>maven-repository-metadata</artifactId>
						<version>${version.maven}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.jboss.arquillian.junit</groupId>
						<artifactId>arquillian-junit-container</artifactId>
						<version>${version.arquillian_core}</version>
						<scope>test</scope>
					</dependency>
					<!-- Integration Testing with Arquillian: 3rd Party Dependencies -->
					<dependency>
						<groupId>org.jboss.arquillian</groupId>
						<artifactId>arquillian-junit</artifactId>
						<version>${version.arquillian_drone}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.apache.httpcomponents</groupId>
						<artifactId>httpcore</artifactId>
						<version>${version.org.apache.httpcomponents.httpcore}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.apache.httpcomponents</groupId>
						<artifactId>httpclient</artifactId>
						<version>${version.org.apache.httpcomponents.httpclient}</version>
						<scope>test</scope>
					</dependency>
					<!-- other 3rd Party Dependencies for Tests -->
					<dependency>
						<groupId>org.reflections</groupId>
						<artifactId>reflections</artifactId>
						<version>${version.org.reflections.reflections}</version>
					</dependency>
					<dependency>
						<groupId>org.pcollections</groupId>
						<artifactId>pcollections</artifactId>
						<version>${version.org.pcollections.pcollections}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>com.google.guava</groupId>
						<artifactId>guava</artifactId>
						<version>${version.com.google.guava.guava}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>com.google.auto</groupId>
						<artifactId>auto-common</artifactId>
						<version>${version.com.google.auto.auto-common}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>com.google.code.findbugs</groupId>
						<artifactId>jFormatString</artifactId>
						<version>${version.com.google.code.findbugs.jFormatString}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>com.google.code.gson</groupId>
						<artifactId>gson</artifactId>
						<version>${version.com.google.code.gson.gson}</version>
						<scope>test</scope>
					</dependency>
				</dependencies>
			</dependencyManagement>
			<dependencies>
				<!-- Testing -->
				<dependency>
					<groupId>org.jboss.shrinkwrap</groupId>
					<artifactId>shrinkwrap-api</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.junit</groupId>
					<artifactId>arquillian-junit-container</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.primefaces.extensions</groupId>
					<artifactId>primefaces-arquillian</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-java</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-api</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-support</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-leg-rc</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>lift</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>

		<!-- openliberty-dev-run -->
		<profile>
			<id>wlp-dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>jakarta.platform</groupId>
						<artifactId>jakartaee-api-parent</artifactId>
						<version>${version.jakartaee-api}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
					<dependency>
						<groupId>jakarta.platform</groupId>
						<artifactId>jakarta.jakartaee-bom</artifactId>
						<version>${version.jakartaee-api}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
					<dependency>
						<groupId>jakarta.platform</groupId>
						<artifactId>jakarta.jakartaee-api</artifactId>
						<version>${version.jakartaee-api}</version>
						<scope>provided</scope>
					</dependency>
					<dependency>
						<groupId>jakarta.platform</groupId>
						<artifactId>jakarta.jakartaee-web-api</artifactId>
						<version>${version.jakartaee-api}</version>
						<scope>provided</scope>
					</dependency>
					<!-- Jakarta EE Runtime: OpenLiberty -->
					<dependency>
						<groupId>io.openliberty</groupId>
						<artifactId>openliberty-javaee8</artifactId>
						<version>${version.jakartaee8.server.openliberty}</version>
						<type>zip</type>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>io.openliberty.features</groupId>
						<artifactId>features-bom</artifactId>
						<version>${version.jakartaee8.server.openliberty}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
					<dependency>
						<groupId>io.openliberty.arquillian</groupId>
						<artifactId>arquillian-liberty-managed</artifactId>
						<version>${version.jakartaee8.server.openliberty.arquillian}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>io.openliberty.arquillian</groupId>
						<artifactId>arquillian-liberty-remote</artifactId>
						<version>${version.jakartaee8.server.openliberty.arquillian}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>io.openliberty.arquillian</groupId>
						<artifactId>liberty-support-feature</artifactId>
						<version>${version.jakartaee8.server.openliberty.arquillian}</version>
						<scope>test</scope>
					</dependency>
				</dependencies>
			</dependencyManagement>
			<dependencies>
				<dependency>
					<groupId>jakarta.platform</groupId>
					<artifactId>jakarta.jakartaee-api</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty</groupId>
					<artifactId>openliberty-javaee8</artifactId>
					<type>zip</type>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>javaee-8.0</artifactId>
					<type>esa</type>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>sessionDatabase-1.0</artifactId>
					<type>esa</type>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>json-1.0</artifactId>
					<type>esa</type>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-core</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-api</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-slf4j-impl</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-web</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-appserver</artifactId>
				</dependency>
				<!-- shrinkwrap -->
				<!--
				<dependency>
					<groupId>org.jboss.shrinkwrap.resolver</groupId>
					<artifactId>shrinkwrap-resolver-depchain</artifactId>
					<type>pom</type>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.shrinkwrap.resolver</groupId>
					<artifactId>shrinkwrap-resolver-api-maven-embedded</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-rt-rs-client</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-rt-rs-extension-providers</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>net.jcip</groupId>
					<artifactId>jcip-annotations</artifactId>
					<scope>test</scope>
				</dependency>
				-->
				<dependency>
					<groupId>com.dkanejs.maven.plugins</groupId>
					<artifactId>docker-compose-maven-plugin</artifactId>
					<version>${version.docker-compose-maven-plugin}</version>
				</dependency>
			</dependencies>
			<build>
				<finalName>${project.artifactId}</finalName>
				<defaultGoal>clean install docker-compose:up liberty:dev docker-compose:down</defaultGoal>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
					<resource>
						<directory>src/main/resources-liberty</directory>
					</resource>
				</resources>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-dependency-plugin</artifactId>
							<version>${version.maven-dependency-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-clean-plugin</artifactId>
							<version>${version.maven-clean-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-compiler-plugin</artifactId>
							<version>${version.maven-compiler-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-source-plugin</artifactId>
							<version>${version.maven-source-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>${version.maven-javadoc-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-resources-plugin</artifactId>
							<version>${version.maven-resources-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-install-plugin</artifactId>
							<version>${version.maven-install-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-maven-plugin</artifactId>
							<version>${version.lombok-maven-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-war-plugin</artifactId>
							<version>${version.maven-war-plugin}</version>
						</plugin>
						<plugin>
							<groupId>io.openliberty.tools</groupId>
							<artifactId>liberty-maven-plugin</artifactId>
							<version>${version.liberty-maven-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-junit4</artifactId>
							<version>${version.maven-surefire-plugin.junit4}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-plugin</artifactId>
							<version>${version.maven-surefire-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-failsafe-plugin</artifactId>
							<version>${version.maven-failsafe-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-invoker-plugin</artifactId>
							<version>${version.maven-invoker-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-shade-plugin</artifactId>
							<version>${version.maven-shade-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jar-plugin</artifactId>
							<version>${version.maven-jar-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-assembly-plugin</artifactId>
							<version>${version.maven-assembly-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-deploy-plugin</artifactId>
							<version>${version.maven-deploy-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-help-plugin</artifactId>
							<version>${version.maven-help-plugins}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-toolchains-plugin</artifactId>
							<version>${version.maven-toolchains-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-scm-plugin</artifactId>
							<version>${version.org.apache.maven.scm}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-release-plugin</artifactId>
							<version>${version.maven-release-plugin}</version>
						</plugin>
						<plugin>
								<groupId>com.dkanejs.maven.plugins</groupId>
								<artifactId>docker-compose-maven-plugin</artifactId>
								<version>${version.docker-compose-maven-plugin}</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>com.dkanejs.maven.plugins</groupId>
						<artifactId>docker-compose-maven-plugin</artifactId>
						<configuration>
							<composeFile>${project.basedir}/docker-compose.yml</composeFile>
							<verbose>true</verbose>
							<removeImages>true</removeImages>
							<removeVolumes>true</removeVolumes>
							<ignorePullFailures>true</ignorePullFailures>
							<detachedMode>true</detachedMode>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-database-driver</id>
								<phase>compile</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.postgresql</groupId>
											<artifactId>postgresql</artifactId>
											<version>${version.postgresql.driver}</version>
											<type>jar</type>
											<overWrite>true</overWrite>
											<outputDirectory>${project.basedir}/src/main/liberty/config</outputDirectory>
											<destFileName>postgresql.jar</destFileName>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
							<execution>
								<id>check-dependencies1</id>
								<phase>verify</phase>
								<goals>
									<goal>list</goal>
									<goal>list-repositories</goal>
									<goal>properties</goal>
								</goals>
							</execution>
							<execution>
								<id>check-dependencies2</id>
								<phase>verify</phase>
								<goals>
									<goal>analyze</goal>
									<goal>analyze-dep-mgt</goal>
									<goal>analyze-duplicate</goal>
									<goal>analyze-report</goal>
								</goals>
							</execution>
							<execution>
								<id>check-dependencies3</id>
								<phase>verify</phase>
								<goals>
									<goal>tree</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<phase>site</phase>
								<configuration>
									<excludeGroupIds>org.webjars,org.jclouds,org.jboss.as,xml-resolver,commons-configuration,org.codehaus.plexus,commons-digester,junit,log4j,io.openliberty.features</excludeGroupIds>
									<excludeArtifactIds>weld-probe-core,commons-configuration,jdk.tools,maven-antrun-plugin</excludeArtifactIds>
									<failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
									<reportSets>
										<reportSet>
											<reports>
												<report>analyze-report</report>
											</reports>
										</reportSet>
									</reportSets>
								</configuration>
							</execution>
							<execution>
								<id>get-dependency-sources</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>sources</goal>
									<goal>resolve</goal>
									<goal>resolve-plugins</goal>
									<goal>collect</goal>
									<goal>copy-dependencies</goal>
									<goal>unpack-dependencies</goal>
								</goals>
								<configuration>
									<excludeGroupIds>org.webjars</excludeGroupIds>
									<excludeArtifactIds>weld-probe-core</excludeArtifactIds>
									<classifier>sources</classifier>
									<failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
									<outputDirectory>${project.build.directory}/dependencies/</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<source>${java.version}</source>
							<target>${java.version}</target>
							<compilerArgument>-Xlint:all</compilerArgument>
							<showWarnings>true</showWarnings>
							<showDeprecation>true</showDeprecation>
							<annotationProcessorPaths>
								<path>
									<groupId>org.projectlombok</groupId>
									<artifactId>lombok</artifactId>
									<version>${version.org.projectlombok.lombok}</version>
								</path>
							</annotationProcessorPaths>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-install-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-scm-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-release-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.projectlombok</groupId>
						<artifactId>lombok-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>generate-sources</phase>
								<goals>
									<goal>delombok</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<packagingExcludes>pom.xml</packagingExcludes>
						</configuration>
						<executions>
							<execution>
								<id>war</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>war</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>io.openliberty.tools</groupId>
						<artifactId>liberty-maven-plugin</artifactId>
						<extensions>true</extensions>
						<configuration>
							<runtimeArtifact>
								<groupId>io.openliberty</groupId>
								<artifactId>openliberty-javaee8</artifactId>
								<version>${version.jakartaee8.server.openliberty}</version>
								<type>zip</type>
							</runtimeArtifact>
							<runtimeInstallDirectory>${project.build.directory}/liberty</runtimeInstallDirectory>
							<serverName>${runtime.jakartaee8.server.openliberty.ServerName}</serverName>
							<serverStartTimeout>300</serverStartTimeout>
							<verifyTimeout>300</verifyTimeout>
							<skipTests>true</skipTests>
							<looseApplication>true</looseApplication>
							<installAppPackages>project</installAppPackages>
							<sourceDirectoryString>${project.basedir}/src/main/webapp</sourceDirectoryString>
							<skipTestServer>false</skipTestServer>
							<!-- begin configure-arquillian -->
							<arquillianProperties>
								<deployType>dropins</deployType>
								<appDeployTimeout>600</appDeployTimeout>
								<appUndeployTimeout>400</appUndeployTimeout>
							</arquillianProperties>
							<skipIfArquillianXmlExists>false</skipIfArquillianXmlExists>
							<!-- end configure-arquillian -->
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<executions>
							<execution>
								<id>test-surefire</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<skipTests>false</skipTests>
							<environmentVariables>
								<webdriverBrowser>chrome</webdriverBrowser>
								<wlpHome>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlpHome>
								<wlp.home>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlp.home>
								<OPENLIBERTY_HOME>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</OPENLIBERTY_HOME>
							</environmentVariables>
							<systemPropertyVariables>
								<webdriverBrowser>chrome</webdriverBrowser>
								<liberty.test.port>9080</liberty.test.port>
								<war.name>${project.artifactId}</war.name>
								<wlpHome>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlpHome>
								<wlp.home>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlp.home>
								<OPENLIBERTY_HOME>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</OPENLIBERTY_HOME>
							</systemPropertyVariables>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<id>test-failsafe</id>
								<phase>install</phase>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<skipTests>false</skipTests>
							<environmentVariables>
								<webdriverBrowser>chrome</webdriverBrowser>
								<wlpHome>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlpHome>
								<wlp.home>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlp.home>
								<OPENLIBERTY_HOME>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</OPENLIBERTY_HOME>
							</environmentVariables>
							<systemPropertyVariables>
								<webdriverBrowser>chrome</webdriverBrowser>
								<liberty.test.port>9080</liberty.test.port>
								<war.name>${project.artifactId}</war.name>
								<wlpHome>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlpHome>
								<wlp.home>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlp.home>
								<OPENLIBERTY_HOME>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</OPENLIBERTY_HOME>
							</systemPropertyVariables>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-invoker-plugin</artifactId>
						<configuration>
							<cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
							<settingsFile>src/it/settings.xml</settingsFile>
							<localRepositoryPath>${project.build.directory}/it-repo</localRepositoryPath>
							<postBuildHookScript>verify</postBuildHookScript> <!-- no extension required -->
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- openliberty-managed-run -->
		<profile>
			<id>wlp-run</id>
			<properties/>
			<dependencyManagement>
				<dependencies>
					<!-- Jakarta EE Runtime: OpenLiberty -->
					<dependency>
						<groupId>io.openliberty</groupId>
						<artifactId>openliberty-javaee8</artifactId>
						<version>${version.jakartaee8.server.openliberty}</version>
						<type>zip</type>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>io.openliberty.features</groupId>
						<artifactId>features-bom</artifactId>
						<version>${version.jakartaee8.server.openliberty}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
					<dependency>
						<groupId>io.openliberty.arquillian</groupId>
						<artifactId>arquillian-liberty-managed</artifactId>
						<version>${version.jakartaee8.server.openliberty.arquillian}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>io.openliberty.arquillian</groupId>
						<artifactId>arquillian-liberty-remote</artifactId>
						<version>${version.jakartaee8.server.openliberty.arquillian}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>io.openliberty.arquillian</groupId>
						<artifactId>liberty-support-feature</artifactId>
						<version>${version.jakartaee8.server.openliberty.arquillian}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>jakarta.platform</groupId>
						<artifactId>jakarta.jakartaee-api</artifactId>
						<scope>provided</scope>
					</dependency>
					<dependency>
						<groupId>io.openliberty.features</groupId>
						<artifactId>javaee-8.0</artifactId>
						<type>esa</type>
						<scope>provided</scope>
					</dependency>
					<dependency>
						<groupId>io.openliberty.features</groupId>
						<artifactId>sessionDatabase-1.0</artifactId>
						<type>esa</type>
						<scope>provided</scope>
					</dependency>
					<dependency>
						<groupId>io.openliberty.features</groupId>
						<artifactId>json-1.0</artifactId>
						<type>esa</type>
						<scope>provided</scope>
					</dependency>
					<dependency>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</dependency>
					<dependency>
						<groupId>org.apache.logging.log4j</groupId>
						<artifactId>log4j-core</artifactId>
					</dependency>
					<dependency>
						<groupId>org.apache.logging.log4j</groupId>
						<artifactId>log4j-api</artifactId>
					</dependency>
					<dependency>
						<groupId>org.apache.logging.log4j</groupId>
						<artifactId>log4j-slf4j-impl</artifactId>
					</dependency>
					<dependency>
						<groupId>org.apache.logging.log4j</groupId>
						<artifactId>log4j-web</artifactId>
					</dependency>
					<dependency>
						<groupId>org.apache.logging.log4j</groupId>
						<artifactId>log4j-appserver</artifactId>
					</dependency>
					<!-- shrinkwrap -->
					<dependency>
						<groupId>org.jboss.shrinkwrap.resolver</groupId>
						<artifactId>shrinkwrap-resolver-depchain</artifactId>
						<type>pom</type>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.jboss.shrinkwrap.resolver</groupId>
						<artifactId>shrinkwrap-resolver-api-maven-embedded</artifactId>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.apache.cxf</groupId>
						<artifactId>cxf-rt-rs-client</artifactId>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.apache.cxf</groupId>
						<artifactId>cxf-rt-rs-extension-providers</artifactId>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>net.jcip</groupId>
						<artifactId>jcip-annotations</artifactId>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>com.dkanejs.maven.plugins</groupId>
						<artifactId>docker-compose-maven-plugin</artifactId>
						<version>${version.docker-compose-maven-plugin}</version>
					</dependency>
				</dependencies>
			</dependencyManagement>
			<dependencies>
				<dependency>
					<groupId>jakarta.platform</groupId>
					<artifactId>jakarta.jakartaee-api</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty</groupId>
					<artifactId>openliberty-javaee8</artifactId>
					<type>zip</type>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>javaee-8.0</artifactId>
					<type>esa</type>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>sessionDatabase-1.0</artifactId>
					<type>esa</type>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>json-1.0</artifactId>
					<type>esa</type>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-core</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-api</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-slf4j-impl</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-web</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-appserver</artifactId>
				</dependency>
				<!-- shrinkwrap -->
				<dependency>
					<groupId>org.jboss.shrinkwrap.resolver</groupId>
					<artifactId>shrinkwrap-resolver-depchain</artifactId>
					<type>pom</type>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.shrinkwrap.resolver</groupId>
					<artifactId>shrinkwrap-resolver-api-maven-embedded</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-rt-rs-client</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-rt-rs-extension-providers</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>net.jcip</groupId>
					<artifactId>jcip-annotations</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.dkanejs.maven.plugins</groupId>
					<artifactId>docker-compose-maven-plugin</artifactId>
				</dependency>
			</dependencies>
			<build>
				<finalName>${project.artifactId}</finalName>
				<defaultGoal>clean install docker-compose:up liberty:run docker-compose:down</defaultGoal>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
					<resource>
						<directory>src/main/resources-liberty</directory>
					</resource>
				</resources>
				<pluginManagement>
					<plugins>
						<!-- this profile -->
						<plugin>
							<groupId>io.openliberty.tools</groupId>
							<artifactId>liberty-maven-plugin</artifactId>
							<version>${version.liberty-maven-plugin}</version>
						</plugin>
						<!-- all profiles -->
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-dependency-plugin</artifactId>
							<version>${version.maven-dependency-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-clean-plugin</artifactId>
							<version>${version.maven-clean-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-maven-plugin</artifactId>
							<version>${version.lombok-maven-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-compiler-plugin</artifactId>
							<version>${version.maven-compiler-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-source-plugin</artifactId>
							<version>${version.maven-source-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>${version.maven-javadoc-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-resources-plugin</artifactId>
							<version>${version.maven-resources-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-install-plugin</artifactId>
							<version>${version.maven-install-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-war-plugin</artifactId>
							<version>${version.maven-war-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-junit4</artifactId>
							<version>${version.maven-surefire-plugin.junit4}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-plugin</artifactId>
							<version>${version.maven-surefire-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-failsafe-plugin</artifactId>
							<version>${version.maven-failsafe-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-invoker-plugin</artifactId>
							<version>${version.maven-invoker-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-shade-plugin</artifactId>
							<version>${version.maven-shade-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jar-plugin</artifactId>
							<version>${version.maven-jar-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-assembly-plugin</artifactId>
							<version>${version.maven-assembly-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-deploy-plugin</artifactId>
							<version>${version.maven-deploy-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-help-plugin</artifactId>
							<version>${version.maven-help-plugins}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-toolchains-plugin</artifactId>
							<version>${version.maven-toolchains-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-scm-plugin</artifactId>
							<version>${version.org.apache.maven.scm}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-release-plugin</artifactId>
							<version>${version.maven-release-plugin}</version>
						</plugin>
						<plugin>
							<groupId>com.dkanejs.maven.plugins</groupId>
							<artifactId>docker-compose-maven-plugin</artifactId>
							<version>${version.docker-compose-maven-plugin}</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>com.dkanejs.maven.plugins</groupId>
						<artifactId>docker-compose-maven-plugin</artifactId>
						<configuration>
							<composeFile>${project.basedir}/docker-compose.yml</composeFile>
							<verbose>true</verbose>
							<removeImages>true</removeImages>
							<removeVolumes>true</removeVolumes>
							<ignorePullFailures>true</ignorePullFailures>
							<detachedMode>true</detachedMode>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-database-driver</id>
								<phase>compile</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.postgresql</groupId>
											<artifactId>postgresql</artifactId>
											<version>${version.postgresql.driver}</version>
											<type>jar</type>
											<overWrite>true</overWrite>
											<outputDirectory>${project.basedir}/src/main/liberty/config</outputDirectory>
											<destFileName>postgresql.jar</destFileName>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
							<execution>
								<id>check-dependencies</id>
								<phase>process-sources</phase>
								<goals>
									<goal>sources</goal>
									<goal>resolve</goal>
									<goal>resolve-plugins</goal>
									<goal>analyze</goal>
									<goal>collect</goal>
									<goal>properties</goal>
									<goal>tree</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<source>${java.version}</source>
							<target>${java.version}</target>
							<compilerArgument>-Xlint:all</compilerArgument>
							<showWarnings>true</showWarnings>
							<showDeprecation>true</showDeprecation>
							<annotationProcessorPaths>
								<path>
									<groupId>org.projectlombok</groupId>
									<artifactId>lombok</artifactId>
									<version>${version.org.projectlombok.lombok}</version>
								</path>
							</annotationProcessorPaths>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-install-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-scm-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-release-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.projectlombok</groupId>
						<artifactId>lombok-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>generate-sources</phase>
								<goals>
									<goal>delombok</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<packagingExcludes>pom.xml</packagingExcludes>
						</configuration>
						<executions>
							<execution>
								<id>war</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>war</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>io.openliberty.tools</groupId>
						<artifactId>liberty-maven-plugin</artifactId>
						<extensions>true</extensions>
						<configuration>
							<runtimeArtifact>
								<groupId>io.openliberty</groupId>
								<artifactId>openliberty-javaee8</artifactId>
								<version>${version.jakartaee8.server.openliberty}</version>
								<type>zip</type>
							</runtimeArtifact>
							<runtimeInstallDirectory>${project.build.directory}/liberty</runtimeInstallDirectory>
							<serverName>${runtime.jakartaee8.server.openliberty.ServerName}</serverName>
							<serverStartTimeout>300</serverStartTimeout>
							<verifyTimeout>300</verifyTimeout>
							<skipTests>true</skipTests>
							<looseApplication>true</looseApplication>
							<installAppPackages>project</installAppPackages>
							<sourceDirectoryString>${project.basedir}/src/main/webapp</sourceDirectoryString>
							<skipTestServer>false</skipTestServer>
							<!-- begin configure-arquillian -->
							<arquillianProperties>
								<deployType>dropins</deployType>
								<appDeployTimeout>600</appDeployTimeout>
								<appUndeployTimeout>400</appUndeployTimeout>
							</arquillianProperties>
							<skipIfArquillianXmlExists>false</skipIfArquillianXmlExists>
							<!-- end configure-arquillian -->
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<executions>
							<execution>
								<id>test-surefire</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<skipTests>false</skipTests>
							<environmentVariables>
								<webdriverBrowser>chrome</webdriverBrowser>
								<wlpHome>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlpHome>
								<wlp.home>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlp.home>
								<OPENLIBERTY_HOME>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</OPENLIBERTY_HOME>
							</environmentVariables>
							<systemPropertyVariables>
								<webdriverBrowser>chrome</webdriverBrowser>
								<liberty.test.port>9080</liberty.test.port>
								<war.name>${project.artifactId}</war.name>
								<wlpHome>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlpHome>
								<wlp.home>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlp.home>
								<OPENLIBERTY_HOME>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</OPENLIBERTY_HOME>
							</systemPropertyVariables>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<id>test-failsafe</id>
								<phase>install</phase>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<skipTests>false</skipTests>
							<environmentVariables>
								<webdriverBrowser>chrome</webdriverBrowser>
								<wlpHome>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlpHome>
								<wlp.home>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlp.home>
								<OPENLIBERTY_HOME>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</OPENLIBERTY_HOME>
							</environmentVariables>
							<systemPropertyVariables>
								<webdriverBrowser>chrome</webdriverBrowser>
								<liberty.test.port>9080</liberty.test.port>
								<war.name>${project.artifactId}</war.name>
								<wlpHome>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlpHome>
								<wlp.home>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlp.home>
								<OPENLIBERTY_HOME>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</OPENLIBERTY_HOME>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-invoker-plugin</artifactId>
					<configuration>
						<cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
						<settingsFile>src/it/settings.xml</settingsFile>
						<localRepositoryPath>${project.build.directory}/it-repo</localRepositoryPath>
						<postBuildHookScript>verify</postBuildHookScript> <!-- no extension required -->
					</configuration>
				</plugin>
				</plugins>
				<!--
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>io.openliberty</groupId>
											<artifactId>openliberty-javaee8</artifactId>
											<version>${version.jakartaee8.server.openliberty}</version>
											<type>zip</type>
											<overWrite>true</overWrite>
											<outputDirectory>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
							<execution>
								<id>copy-postgresql</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.postgresql</groupId>
											<artifactId>postgresql</artifactId>
											<version>${version.postgresql.driver}</version>
											<type>jar</type>
											<overWrite>true</overWrite>
											<outputDirectory>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp/usr/servers/${runtime.jakartaee8.server.openliberty.ServerName}/lib</outputDirectory>
											<destFileName>postgresql.jar</destFileName>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<packagingExcludes>pom.xml</packagingExcludes>
						</configuration>
						<executions>
							<execution>
								<id>war</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>war</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>io.openliberty.tools</groupId>
						<artifactId>liberty-maven-plugin</artifactId>
						<extensions>true</extensions>
						<configuration>
							<assemblyArtifact>
								<groupId>io.openliberty</groupId>
								<artifactId>openliberty-javaee8</artifactId>
								<version>${version.jakartaee8.server.openliberty}</version>
								<type>zip</type>
							</assemblyArtifact>
							<installDirectory>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</installDirectory>
							<serverName>${runtime.jakartaee8.server.openliberty.ServerName}</serverName>
							<features>
								<acceptLicense>true</acceptLicense>
								<feature>javaee-8.0</feature>
								<feature>json-1.0</feature>
								<feature>sessionDatabase-1.0</feature>
								<feature>springBoot-2.0</feature>
							</features>
							<configFile>src/main/liberty/config/server.xml</configFile>
							<looseApplication>true</looseApplication>
							<include>usr</include>
							<bootstrapProperties>
								<default.http.port>8080</default.http.port>
								<default.https.port>8443</default.https.port>
								<app.context.root>${project.artifactId}</app.context.root>
								<packageFile>${project.build.directory}/${project.artifactId}.war</packageFile>
								<wlpHome>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlpHome>
								<timeout>300</timeout>
							</bootstrapProperties>
							<timeout>300</timeout>
							<serverStartTimeout>300</serverStartTimeout>
							<appsDirectory>apps</appsDirectory>
							<stripVersion>true</stripVersion>
							<installAppPackages>project</installAppPackages>
							<refresh>true</refresh>
							<sourceDirectoryString>${project.basedir}/src/main/webapp</sourceDirectoryString>
							<skipTestServer>false</skipTestServer>
							<arquillianProperties>
								<deployType>dropins</deployType>
								<appDeployTimeout>600</appDeployTimeout>
								<appUndeployTimeout>400</appUndeployTimeout>
							</arquillianProperties>
							<skipIfArquillianXmlExists>false</skipIfArquillianXmlExists>
						</configuration>
						<executions>
							<execution>
								<id>install-server</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>create-server</goal>
									<goal>install-feature</goal>
									<goal>configure-arquillian</goal>
								</goals>
								<configuration>
									<features>
										<acceptLicense>true</acceptLicense>
										<feature>javaee-8.0</feature>
										<feature>json-1.0</feature>
										<feature>sessionDatabase-1.0</feature>
										<feature>springBoot-2.0</feature>
									</features>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</plugin>
				</plugins>
				-->
			</build>
		</profile>
		<!-- openliberty-managed-test -->
		<profile>
			<id>wlp-test</id>
			<properties>
				<skipIntegrationTests>false</skipIntegrationTests>
				<webdriverBrowser>chrome</webdriverBrowser>
			</properties>
			<dependencyManagement>
				<dependencies>
				<!-- Jakarta EE Runtime: OpenLiberty -->
				<dependency>
					<groupId>io.openliberty</groupId>
					<artifactId>openliberty-javaee8</artifactId>
					<version>${version.jakartaee8.server.openliberty}</version>
					<type>zip</type>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>features-bom</artifactId>
					<version>${version.jakartaee8.server.openliberty}</version>
					<type>pom</type>
					<scope>import</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.arquillian</groupId>
					<artifactId>arquillian-liberty-managed</artifactId>
					<version>${version.jakartaee8.server.openliberty.arquillian}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.arquillian</groupId>
					<artifactId>arquillian-liberty-remote</artifactId>
					<version>${version.jakartaee8.server.openliberty.arquillian}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.arquillian</groupId>
					<artifactId>liberty-support-feature</artifactId>
					<version>${version.jakartaee8.server.openliberty.arquillian}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>javaee-8.0</artifactId>
					<version>${version.}</version>
					<type>esa</type>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>sessionDatabase-1.0</artifactId>
					<version>${version.}</version>
					<type>esa</type>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>json-1.0</artifactId>
					<version>${version.}</version>
					<type>esa</type>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>springBoot-2.0</artifactId>
					<version>${version.}</version>
					<type>esa</type>
					<scope>provided</scope>
				</dependency>
				<!-- shrinkwrap -->
				<dependency>
					<groupId>org.jboss.shrinkwrap.resolver</groupId>
					<artifactId>shrinkwrap-resolver-depchain</artifactId>
					<version>${version.}</version>
					<type>pom</type>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.shrinkwrap.resolver</groupId>
					<artifactId>shrinkwrap-resolver-api-maven-embedded</artifactId>
					<version>${version.}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-rt-rs-client</artifactId>
					<version>${version.}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-rt-rs-extension-providers</artifactId>
					<version>${version.}</version>
					<scope>test</scope>
				</dependency>
				<!-- -->
				<dependency>
					<groupId>org.jboss.arquillian.extension</groupId>
					<artifactId>arquillian-drone-impl</artifactId>
					<version>${version.arquillian_drone}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
					<version>${version.}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.junit</groupId>
					<artifactId>arquillian-junit-container</artifactId>
					<version>${version.arquillian_core}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.core</groupId>
					<artifactId>arquillian-core-impl-base</artifactId>
					<version>${version.}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.config</groupId>
					<artifactId>arquillian-config-impl-base</artifactId>
					<version>${version.}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
					<version>${version.xml-apis}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.protocol</groupId>
					<artifactId>arquillian-protocol-servlet</artifactId>
					<version>${version.arquillian_core}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.testenricher</groupId>
					<artifactId>arquillian-testenricher-resource</artifactId>
					<!--
					<version>${version.}</version>
					-->
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.testenricher</groupId>
					<artifactId>arquillian-testenricher-initialcontext</artifactId>
					<!--
					<version>${version.}</version>
					-->
					<scope>test</scope>
				</dependency>
					<dependency>
						<groupId>org.apache.httpcomponents</groupId>
						<artifactId>httpcore</artifactId>
						<version>${version.org.apache.httpcomponents.httpcore}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.apache.httpcomponents</groupId>
						<artifactId>httpclient</artifactId>
						<version>${version.org.apache.httpcomponents.httpclient}</version>
						<scope>test</scope>
					</dependency>
				<dependency>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
					<version>${version.commons-logging}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-core</artifactId>
					<version>${version.log4j}</version>
				</dependency>
					<dependency>
						<groupId>org.apache.logging.log4j</groupId>
						<artifactId>log4j-api</artifactId>
						<version>${version.log4j}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.logging.log4j</groupId>
						<artifactId>log4j-slf4j-impl</artifactId>
						<version>${version.log4j}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.logging.log4j</groupId>
						<artifactId>log4j-to-slf4j</artifactId>
						<version>${version.log4j}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.logging.log4j</groupId>
						<artifactId>log4j-web</artifactId>
						<version>${version.log4j}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.logging.log4j</groupId>
						<artifactId>log4j-appserver</artifactId>
						<version>${version.log4j}</version>
					</dependency>
				<dependency>
					<groupId>org.reflections</groupId>
					<artifactId>reflections</artifactId>
					<version>${version.}</version>
				</dependency>
				<dependency>
					<groupId>org.pcollections</groupId>
					<artifactId>pcollections</artifactId>
					<version>${version.}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
					<version>${version.com.google.guava.guava}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.google.auto</groupId>
					<artifactId>auto-common</artifactId>
					<version>${version.}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.google.code.findbugs</groupId>
					<artifactId>jFormatString</artifactId>
					<version>${version.com.google.code.findbugs.jFormatString}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.google.code.gson</groupId>
					<artifactId>gson</artifactId>
					<version>${version.com.google.code.gson.gson}</version>
					<scope>test</scope>
				</dependency>
					<dependency>
						<groupId>org.seleniumhq.selenium</groupId>
						<artifactId>selenium-chrome-driver</artifactId>
						<version>${version.selenium}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-search-engine</artifactId>
						<version>${version.hibernate-search}</version>
					</dependency>
					<dependency>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-search-orm</artifactId>
						<version>${version.hibernate-search}</version>
					</dependency>
				<dependency>
					<groupId>org.primefaces.extensions</groupId>
					<artifactId>primefaces-arquillian</artifactId>
					<version>${version.org.primefaces.extensions.primefaces-arquillian}</version>
				</dependency>
				<dependency>
					<groupId>org.omnifaces</groupId>
					<artifactId>arquillian-primefaces</artifactId>
					<version>${version.org.omnifaces.arquillian-primefaces}</version>
				</dependency>
				</dependencies>
			</dependencyManagement>
			<dependencies>
				<dependency>
					<groupId>io.openliberty.arquillian</groupId>
					<artifactId>arquillian-liberty-managed</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty</groupId>
					<artifactId>openliberty-javaee8</artifactId>
					<type>zip</type>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>javaee-8.0</artifactId>
					<type>esa</type>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>sessionDatabase-1.0</artifactId>
					<type>esa</type>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>json-1.0</artifactId>
					<type>esa</type>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>springBoot-2.0</artifactId>
					<type>esa</type>
					<scope>provided</scope>
				</dependency>
				<!-- shrinkwrap -->
				<dependency>
					<groupId>org.jboss.shrinkwrap.resolver</groupId>
					<artifactId>shrinkwrap-resolver-depchain</artifactId>
					<type>pom</type>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.shrinkwrap.resolver</groupId>
					<artifactId>shrinkwrap-resolver-api-maven-embedded</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-rt-rs-client</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-rt-rs-extension-providers</artifactId>
					<scope>test</scope>
				</dependency>
				<!-- -->
				<dependency>
					<groupId>org.jboss.arquillian.extension</groupId>
					<artifactId>arquillian-drone-impl</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.junit</groupId>
					<artifactId>arquillian-junit-container</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.core</groupId>
					<artifactId>arquillian-core-impl-base</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.config</groupId>
					<artifactId>arquillian-config-impl-base</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.protocol</groupId>
					<artifactId>arquillian-protocol-servlet</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.testenricher</groupId>
					<artifactId>arquillian-testenricher-resource</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.testenricher</groupId>
					<artifactId>arquillian-testenricher-initialcontext</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpcore</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpclient</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-core</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-api</artifactId>
				</dependency>
				<dependency>
					<groupId>org.reflections</groupId>
					<artifactId>reflections</artifactId>
				</dependency>
				<dependency>
					<groupId>org.pcollections</groupId>
					<artifactId>pcollections</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.google.auto</groupId>
					<artifactId>auto-common</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.google.code.findbugs</groupId>
					<artifactId>jFormatString</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.google.code.gson</groupId>
					<artifactId>gson</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-chrome-driver</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-search-engine</artifactId>
				</dependency>
				<dependency>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-search-orm</artifactId>
				</dependency>
				<dependency>
					<groupId>org.primefaces.extensions</groupId>
					<artifactId>primefaces-arquillian</artifactId>
				</dependency>
				<dependency>
					<groupId>org.omnifaces</groupId>
					<artifactId>arquillian-primefaces</artifactId>
				</dependency>
			</dependencies>
			<build>
				<finalName>${project.artifactId}</finalName>
				<defaultGoal>clean install</defaultGoal>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
					<resource>
						<directory>src/main/resources-liberty</directory>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<packagingExcludes>pom.xml</packagingExcludes>
						</configuration>
						<executions>
							<execution>
								<id>war</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>war</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>io.openliberty</groupId>
											<artifactId>openliberty-javaee8</artifactId>
											<version>${version.jakartaee8.server.openliberty}</version>
											<type>zip</type>
											<overWrite>true</overWrite>
											<outputDirectory>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
							<execution>
								<id>copypostgresql</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
									<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.postgresql</groupId>
											<artifactId>postgresql</artifactId>
											<version>${version.postgresql.driver}</version>
											<type>jar</type>
											<overWrite>true</overWrite>
											<outputDirectory>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp/usr/servers/${runtime.jakartaee8.server.openliberty.ServerName}/lib</outputDirectory>
											<destFileName>postgresql.jar</destFileName>
										</artifactItem>
								</artifactItems>
								</configuration>
							</execution>

							<execution>
								<id>check-dependencies</id>
								<phase>verify</phase>
								<goals>
									<goal>analyze</goal>
									<goal>analyze-dep-mgt</goal>
									<goal>analyze-duplicate</goal>
									<goal>analyze-report</goal>
									<goal>list</goal>
									<goal>list-repositories</goal>
									<goal>properties</goal>
									<goal>tree</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/dependencies</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>get-dependency-sources</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>sources</goal>
									<goal>resolve</goal>
									<goal>resolve-plugins</goal>
									<goal>collect</goal>
									<goal>copy-dependencies</goal>
									<goal>unpack-dependencies</goal>
								</goals>
								<configuration>
									<excludeGroupIds>org.webjars</excludeGroupIds>
									<excludeArtifactIds>weld-probe-core</excludeArtifactIds>
									<classifier>sources</classifier>
									<failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
									<outputDirectory>${project.build.directory}/dependencies/</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>io.openliberty.tools</groupId>
						<artifactId>liberty-maven-plugin</artifactId>
						<extensions>true</extensions>
						<configuration>
							<assemblyArtifact>
								<groupId>io.openliberty</groupId>
								<artifactId>openliberty-javaee8</artifactId>
								<version>${version.jakartaee8.server.openliberty}</version>
								<type>zip</type>
							</assemblyArtifact>
							<installDirectory>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</installDirectory>
							<!--
							<serverHome>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</serverHome>
							-->
							<serverName>${runtime.jakartaee8.server.openliberty.ServerName}</serverName>
							<features>
								<acceptLicense>true</acceptLicense>
								<feature>javaee-8.0</feature>
								<feature>json-1.0</feature>
								<feature>sessionDatabase-1.0</feature>
								<feature>springBoot-2.0</feature>
							</features>
							<configFile>src/main/liberty/config/server.xml</configFile>
							<looseApplication>true</looseApplication>
							<!--
							<packageFile>${project.build.directory}/${project.artifactId}.war</packageFile>
							-->
							<include>usr</include>
							<bootstrapProperties>
								<default.http.port>8080</default.http.port>
								<default.https.port>8443</default.https.port>
								<app.context.root>${project.artifactId}</app.context.root>
								<packageFile>${project.build.directory}/${project.artifactId}.war</packageFile>
								<postgresql.jar.dir>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp/usr/servers/${runtime.jakartaee8.server.openliberty.ServerName}/lib</postgresql.jar.dir>
								<postgresql.jar.file>postgresql.jar</postgresql.jar.file>
								<wlpHome>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlpHome>
							</bootstrapProperties>
							<appsDirectory>apps</appsDirectory>
							<stripVersion>true</stripVersion>
							<installAppPackages>project</installAppPackages>
							<refresh>true</refresh>
							<sourceDirectoryString>${project.basedir}/src/main/webapp</sourceDirectoryString>
							<!--
							<appArchive>${project.build.directory}/${project.artifactId}.war</appArchive>
							-->
							<skipTestServer>false</skipTestServer>
							<!-- begin configure-arquillian -->
							<arquillianProperties>
								<deployType>dropins</deployType>
								<appDeployTimeout>600</appDeployTimeout>
								<appUndeployTimeout>400</appUndeployTimeout>
							</arquillianProperties>
							<skipIfArquillianXmlExists>false</skipIfArquillianXmlExists>
							<!-- end configure-arquillian -->
						</configuration>
						<executions>
							<execution>
								<id>install-server</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>install-feature</goal>
									<goal>configure-arquillian</goal>
								</goals>
								<configuration>
									<features>
										<acceptLicense>true</acceptLicense>
										<feature>javaee-8.0</feature>
										<feature>json-1.0</feature>
										<feature>sessionDatabase-1.0</feature>
										<feature>springBoot-2.0</feature>
									</features>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<executions>
							<execution>
								<id>test-surefire</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<skipTests>false</skipTests>
							<environmentVariables>
								<webdriverBrowser>chrome</webdriverBrowser>
								<wlpHome>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlpHome>
								<wlp.home>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlp.home>
								<OPENLIBERTY_HOME>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</OPENLIBERTY_HOME>
							</environmentVariables>
							<systemPropertyVariables>
								<webdriverBrowser>chrome</webdriverBrowser>
								<liberty.test.port>9080</liberty.test.port>
								<war.name>${project.artifactId}</war.name>
								<wlpHome>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlpHome>
								<wlp.home>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlp.home>
								<OPENLIBERTY_HOME>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</OPENLIBERTY_HOME>
							</systemPropertyVariables>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<id>test-failsafe</id>
								<phase>install</phase>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<skipTests>false</skipTests>
							<environmentVariables>
								<webdriverBrowser>chrome</webdriverBrowser>
								<wlpHome>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlpHome>
								<wlp.home>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlp.home>
								<OPENLIBERTY_HOME>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</OPENLIBERTY_HOME>
							</environmentVariables>
							<systemPropertyVariables>
								<webdriverBrowser>chrome</webdriverBrowser>
								<liberty.test.port>9080</liberty.test.port>
								<war.name>${project.artifactId}</war.name>
								<wlpHome>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlpHome>
								<wlp.home>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</wlp.home>
								<OPENLIBERTY_HOME>${project.build.directory}/openliberty-${version.jakartaee8.server.openliberty}/wlp</OPENLIBERTY_HOME>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- openliberty-remote-run -->
		<profile>
			<id>wlp-run-remote</id>
			<dependencyManagement>
				<dependencies></dependencies>
			</dependencyManagement>
			<dependencies></dependencies>
			<build>
				<finalName>${project.artifactId}</finalName>
				<defaultGoal>clean install</defaultGoal>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
					<resource>
						<directory>src/main/resources-liberty</directory>
					</resource>
				</resources>
				<pluginManagement>
					<plugins>

					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>com.dkanejs.maven.plugins</groupId>
						<artifactId>docker-compose-maven-plugin</artifactId>
						<configuration>
							<composeFile>${project.basedir}/docker-compose-wlp.yml</composeFile>
							<verbose>true</verbose>
							<removeImages>true</removeImages>
							<removeVolumes>true</removeVolumes>
							<ignorePullFailures>true</ignorePullFailures>
							<detachedMode>true</detachedMode>
						</configuration>
					</plugin>
					<plugin>
						<groupId>io.openliberty.tools</groupId>
						<artifactId>liberty-maven-plugin</artifactId>
						<extensions>true</extensions>
						<configuration>
							<installDirectory>${runtime.jakartaee8.server.openliberty.remote}</installDirectory>
							<!--
							<serverHome>${runtime.jakartaee8.server.openliberty.remote}</serverHome>
							-->
							<serverName>defaultServer</serverName>
							<configFile>src/main/liberty/config/server.xml</configFile>
							<looseApplication>true</looseApplication>
							<!--
							<packageFile>${project.build.directory}/${project.artifactId}.war</packageFile>
							-->
							<include>usr</include>
							<appsDirectory>apps</appsDirectory>
							<stripVersion>true</stripVersion>
							<installAppPackages>project</installAppPackages>
							<refresh>true</refresh>
							<sourceDirectoryString>${project.basedir}/src/main/webapp</sourceDirectoryString>
							<!--
							<appArchive>${project.build.directory}/${project.artifactId}.war</appArchive>
							-->
							<skipTestServer>true</skipTestServer>
							<arquillianProperties>
								<defaultProtocol>Servlet 3.1</defaultProtocol>
								<verifyApps>arquillian-test</verifyApps>
								<webdriverBrowser>chrome</webdriverBrowser>
								<browser>chrome</browser>
								<instantiationTimeoutInSeconds>300</instantiationTimeoutInSeconds>
								<openlibertyHome>${runtime.jakartaee8.server.openliberty.remote}</openlibertyHome>
							</arquillianProperties>
							<skipIfArquillianXmlExists>true</skipIfArquillianXmlExists>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- openliberty-remote-test -->
		<profile>
			<id>wlp-test-remote</id>
			<dependencyManagement>
				<dependencies>

				</dependencies>
			</dependencyManagement>
			<dependencies>
				<dependency>
					<groupId>io.openliberty.arquillian</groupId>
					<artifactId>arquillian-liberty-remote</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.junit</groupId>
					<artifactId>arquillian-junit-container</artifactId>
					<scope>test</scope>
				</dependency>
				<!--
				<dependency>
						<groupId>org.jboss.arquillian.graphene</groupId>
						<artifactId>graphene-webdriver-impl</artifactId>
						<scope>test</scope>
				</dependency>
				-->
				<dependency>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-rt-rs-extension-providers</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<finalName>${project.artifactId}</finalName>
				<defaultGoal>clean install</defaultGoal>
				<resources>
				<resource>
					<directory>src/main/resources</directory>
				</resource>
				<resource>
					<directory>src/main/resources-liberty</directory>
				</resource>
				</resources>
				<pluginManagement>

				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>com.dkanejs.maven.plugins</groupId>
						<artifactId>docker-compose-maven-plugin</artifactId>
						<configuration>
							<composeFile>${project.basedir}/docker-compose-wlp.yml</composeFile>
							<verbose>true</verbose>
							<removeImages>true</removeImages>
							<removeVolumes>true</removeVolumes>
							<ignorePullFailures>true</ignorePullFailures>
							<detachedMode>true</detachedMode>
						</configuration>
					</plugin>
					<plugin>
						<groupId>io.openliberty.tools</groupId>
						<artifactId>liberty-maven-plugin</artifactId>
						<extensions>true</extensions>
						<configuration>
							<installDirectory>${runtime.jakartaee8.server.openliberty.remote}</installDirectory>
							<!--
							<serverHome>${runtime.jakartaee8.server.openliberty.remote}</serverHome>
							-->
							<serverName>defaultServer</serverName>
							<configFile>src/main/liberty/config/server.xml</configFile>
							<looseApplication>true</looseApplication>
							<!--
							<packageFile>${project.build.directory}/${project.artifactId}.war</packageFile>
							-->
							<include>usr</include>
							<appsDirectory>apps</appsDirectory>
							<stripVersion>true</stripVersion>
							<installAppPackages>project</installAppPackages>
							<refresh>true</refresh>
							<sourceDirectoryString>${project.basedir}/src/main/webapp</sourceDirectoryString>
							<!--
							<appArchive>${project.build.directory}/${project.artifactId}.war</appArchive>
							-->
							<skipTestServer>true</skipTestServer>
							<arquillianProperties>
								<defaultProtocol>Servlet 3.1</defaultProtocol>
								<verifyApps>arquillian-test</verifyApps>
								<browser>chrome</browser>
								<webdriverBrowser>chrome</webdriverBrowser>
								<instantiationTimeoutInSeconds>300</instantiationTimeoutInSeconds>
								<openlibertyHome>${runtime.jakartaee8.server.openliberty.remote}</openlibertyHome>
							</arquillianProperties>
							<skipIfArquillianXmlExists>true</skipIfArquillianXmlExists>
						</configuration>
						<executions>
							<execution>
								<id>configure-arquillian-xml</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>configure-arquillian</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skipTests>true</skipTests>
							<environmentVariables>
								<OPENLIBERTY_HOME>${runtime.jakartaee8.server.openliberty.remote}</OPENLIBERTY_HOME>
							</environmentVariables>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<skipTests>false</skipTests>
							<environmentVariables>
								<OPENLIBERTY_HOME>${runtime.jakartaee8.server.openliberty.remote}</OPENLIBERTY_HOME>
							</environmentVariables>
						</configuration>
						<executions>
							<execution>
								<id>install</id>
								<phase>install</phase>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- wildfly-managed-run -->
		<profile>
			<id>wf-run</id>
			<properties>
				<skipIntegrationTests>true</skipIntegrationTests>
			</properties>
			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>jakarta.platform</groupId>
						<artifactId>jakartaee-api-parent</artifactId>
						<version>${version.jakartaee-api}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
					<dependency>
						<groupId>jakarta.platform</groupId>
						<artifactId>jakarta.jakartaee-bom</artifactId>
						<version>${version.jakartaee-api}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
					<dependency>
						<groupId>jakarta.platform</groupId>
						<artifactId>jakarta.jakartaee-api</artifactId>
						<version>${version.jakartaee-api}</version>
						<scope>provided</scope>
					</dependency>
					<dependency>
						<groupId>jakarta.platform</groupId>
						<artifactId>jakarta.jakartaee-web-api</artifactId>
						<version>${version.jakartaee-api}</version>
						<scope>provided</scope>
					</dependency>
					<!-- Jakarta EE Runtime: Wildfly -->
					<dependency>
						<groupId>org.wildfly</groupId>
						<artifactId>wildfly-dist</artifactId>
						<version>${version.jakartaee8.server.wildfly}</version>
						<type>zip</type>
					</dependency>
					<dependency>
						<groupId>org.wildfly</groupId>
						<artifactId>wildfly-parent</artifactId>
						<version>${version.jakartaee8.server.wildfly}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
					<dependency>
						<groupId>org.wildfly</groupId>
						<artifactId>wildfly-feature-pack</artifactId>
						<version>${version.jakartaee8.server.wildfly}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
					<dependency>
						<groupId>org.wildfly.arquillian</groupId>
						<artifactId>wildfly-arquillian-container-managed</artifactId>
						<version>${version.jakartaee8.server.wildfly.arquillian}</version>
						<scope>test</scope>
						<exclusions>
							<exclusion>
								<groupId>org.jboss.sasl</groupId>
								<artifactId>jboss-sasl</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.graphene</groupId>
					<artifactId>graphene-webdriver-impl</artifactId>
					<version>${version.org.jboss.arquillian.graphene.graphene-webdriver-imple}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.extension</groupId>
					<artifactId>arquillian-drone-impl</artifactId>
					<version>${version.arquillian_drone}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
					<version>${version.maven-surefire-plugin.junit4}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.junit</groupId>
					<artifactId>arquillian-junit-container</artifactId>
					<version>${version.arquillian_core}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.core</groupId>
					<artifactId>arquillian-core-impl-base</artifactId>
					<version>${version.arquillian_core}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.config</groupId>
					<artifactId>arquillian-core-impl-base</artifactId>
					<version>${version.arquillian_core}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
					<version>${version.xml-apis}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.protocol</groupId>
					<artifactId>arquillian-protocol-servlet</artifactId>
					<version>${version.arquillian_core}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.testenricher</groupId>
					<artifactId>arquillian-testenricher-resource</artifactId>
					<version>${version.arquillian_core}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.testenricher</groupId>
					<artifactId>arquillian-testenricher-initialcontext</artifactId>
					<version>${version.arquillian_core}</version>
					<scope>test</scope>
				</dependency>

					<dependency>
						<groupId>org.apache.httpcomponents</groupId>
						<artifactId>httpcore</artifactId>
						<version>${version.org.apache.httpcomponents.httpcore}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.apache.httpcomponents</groupId>
						<artifactId>httpclient</artifactId>
						<version>${version.org.apache.httpcomponents.httpclient}</version>
						<scope>test</scope>
					</dependency>

					<dependency>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
						<version>${version.commons-logging}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.apache.logging.log4j</groupId>
						<artifactId>log4j-core</artifactId>
						<version>${version.log4j}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.logging.log4j</groupId>
						<artifactId>log4j-api</artifactId>
						<version>${version.log4j}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.logging.log4j</groupId>
						<artifactId>log4j-slf4j-impl</artifactId>
						<version>${version.log4j}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.logging.log4j</groupId>
						<artifactId>log4j-to-slf4j</artifactId>
						<version>${version.log4j}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.logging.log4j</groupId>
						<artifactId>log4j-web</artifactId>
						<version>${version.log4j}</version>
					</dependency>
					<dependency>
						<groupId>org.apache.logging.log4j</groupId>
						<artifactId>log4j-appserver</artifactId>
						<version>${version.log4j}</version>
					</dependency>
					<dependency>
						<groupId>org.reflections</groupId>
						<artifactId>reflections</artifactId>
						<version>${version.org.reflections.reflections}</version>
					</dependency>
					<dependency>
						<groupId>org.pcollections</groupId>
						<artifactId>pcollections</artifactId>
						<version>${version.org.pcollections.pcollections}</version>
						<scope>test</scope>
					</dependency>
				<dependency>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
					<version>${version.com.google.guava.guava}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.google.auto</groupId>
					<artifactId>auto-common</artifactId>
					<version>${version.com.google.auto.auto-common}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.google.code.findbugs</groupId>
					<artifactId>jFormatString</artifactId>
					<version>${version.com.google.code.findbugs.jFormatString}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.google.code.gson</groupId>
					<artifactId>gson</artifactId>
					<version>${version.com.google.code.gson.gson}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-search-engine</artifactId>
					<version>${version.hibernate-search}</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-search-orm</artifactId>
					<version>${version.hibernate-search}</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.primefaces.extensions</groupId>
					<artifactId>primefaces-arquillian</artifactId>
					<version>${version.org.primefaces.extensions.primefaces-arquillian}</version>
				</dependency>
				<dependency>
					<groupId>org.omnifaces</groupId>
					<artifactId>arquillian-primefaces</artifactId>
					<version>${version.org.omnifaces.arquillian-primefaces}</version>
				</dependency>
				</dependencies>
			</dependencyManagement>
			<dependencies>
				<dependency>
					<groupId>jakarta.platform</groupId>
					<artifactId>jakarta.jakartaee-api</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.wildfly.arquillian</groupId>
					<artifactId>wildfly-arquillian-container-managed</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.wildfly.arquillian</groupId>
					<artifactId>wildfly-arquillian-common</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.wildfly.arquillian</groupId>
					<artifactId>wildfly-arquillian-protocol-jmx</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.wildfly.arquillian</groupId>
					<artifactId>wildfly-arquillian-testenricher-msc</artifactId>
					<scope>test</scope>
				</dependency>
				<!-- -->
				<dependency>
					<groupId>org.jboss.arquillian.graphene</groupId>
					<artifactId>graphene-webdriver-impl</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.extension</groupId>
					<artifactId>arquillian-drone-impl</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.junit</groupId>
					<artifactId>arquillian-junit-container</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.core</groupId>
					<artifactId>arquillian-core-impl-base</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.config</groupId>
					<artifactId>arquillian-config-impl-base</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.protocol</groupId>
					<artifactId>arquillian-protocol-servlet</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.testenricher</groupId>
					<artifactId>arquillian-testenricher-resource</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.testenricher</groupId>
					<artifactId>arquillian-testenricher-initialcontext</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpcore</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpclient</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-core</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-api</artifactId>
				</dependency>
				<dependency>
					<groupId>org.reflections</groupId>
					<artifactId>reflections</artifactId>
				</dependency>
				<dependency>
					<groupId>org.pcollections</groupId>
					<artifactId>pcollections</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.google.auto</groupId>
					<artifactId>auto-common</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.google.code.findbugs</groupId>
					<artifactId>jFormatString</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.google.code.gson</groupId>
					<artifactId>gson</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-chrome-driver</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-search-engine</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-search-orm</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.primefaces.extensions</groupId>
					<artifactId>primefaces-arquillian</artifactId>
				</dependency>
				<dependency>
					<groupId>org.omnifaces</groupId>
					<artifactId>arquillian-primefaces</artifactId>
				</dependency>
			</dependencies>
			<build>
				<finalName>${project.artifactId}</finalName>
				<defaultGoal>clean install</defaultGoal>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
					<resource>
						<directory>src/main/resources-wildfly</directory>
					</resource>
				</resources>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.wildfly.plugins</groupId>
							<artifactId>wildfly-maven-plugin</artifactId>
							<version>${version.wildfly-maven-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-dependency-plugin</artifactId>
							<version>${version.maven-dependency-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-clean-plugin</artifactId>
							<version>${version.maven-clean-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-compiler-plugin</artifactId>
							<version>${version.maven-compiler-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-source-plugin</artifactId>
							<version>${version.maven-source-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>${version.maven-javadoc-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-resources-plugin</artifactId>
							<version>${version.maven-resources-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-install-plugin</artifactId>
							<version>${version.maven-install-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-maven-plugin</artifactId>
							<version>${version.lombok-maven-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-war-plugin</artifactId>
							<version>${version.maven-war-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-junit4</artifactId>
							<version>${version.maven-surefire-plugin.junit4}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-plugin</artifactId>
							<version>${version.maven-surefire-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-failsafe-plugin</artifactId>
							<version>${version.maven-failsafe-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-invoker-plugin</artifactId>
							<version>${version.maven-invoker-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-shade-plugin</artifactId>
							<version>${version.maven-shade-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jar-plugin</artifactId>
							<version>${version.maven-jar-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-assembly-plugin</artifactId>
							<version>${version.maven-assembly-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-deploy-plugin</artifactId>
							<version>${version.maven-deploy-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-help-plugin</artifactId>
							<version>${version.maven-help-plugins}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-toolchains-plugin</artifactId>
							<version>${version.maven-toolchains-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-scm-plugin</artifactId>
							<version>${version.org.apache.maven.scm}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-release-plugin</artifactId>
							<version>${version.maven-release-plugin}</version>
						</plugin>
						<plugin>
							<groupId>com.dkanejs.maven.plugins</groupId>
							<artifactId>docker-compose-maven-plugin</artifactId>
							<version>${version.docker-compose-maven-plugin}</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>com.dkanejs.maven.plugins</groupId>
						<artifactId>docker-compose-maven-plugin</artifactId>
						<configuration>
							<composeFile>${project.basedir}/docker-compose.yml</composeFile>
							<verbose>true</verbose>
							<removeImages>true</removeImages>
							<removeVolumes>true</removeVolumes>
							<ignorePullFailures>true</ignorePullFailures>
							<detachedMode>true</detachedMode>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.wildfly</groupId>
											<artifactId>wildfly-dist</artifactId>
											<version>${version.jakartaee8.server.wildfly}</version>
											<type>zip</type>
											<overWrite>false</overWrite>
											<outputDirectory>${project.build.directory}</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						<execution>
							<id>check-dependencies</id>
							<phase>verify</phase>
							<goals>
								<goal>analyze</goal>
								<goal>analyze-dep-mgt</goal>
								<goal>analyze-duplicate</goal>
								<goal>analyze-report</goal>
								<goal>list</goal>
								<goal>list-repositories</goal>
								<goal>properties</goal>
								<goal>tree</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.directory}/dependencies</outputDirectory>
							</configuration>
						</execution>
						<execution>
							<id>get-dependency-sources</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>sources</goal>
								<goal>resolve</goal>
								<goal>resolve-plugins</goal>
								<goal>collect</goal>
								<goal>copy-dependencies</goal>
								<goal>unpack-dependencies</goal>
							</goals>
							<configuration>
								<excludeGroupIds>org.webjars</excludeGroupIds>
								<excludeArtifactIds>weld-probe-core</excludeArtifactIds>
								<classifier>sources</classifier>
								<failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
								<outputDirectory>${project.build.directory}/dependencies/</outputDirectory>
							</configuration>
						</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
						<configuration>
							<filename>${project.artifactId}.war</filename>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skipTests>${skipIntegrationTests}</skipTests>
							<environmentVariables>
								<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
								<JBOSS_HOME>${project.build.directory}/wildfly-${version.jakartaee8.server.wildfly}
								</JBOSS_HOME>
								<jboss.home>${project.build.directory}/wildfly-${version.jakartaee8.server.wildfly}
								</jboss.home>
								<jbossas.startup.timeout>300</jbossas.startup.timeout>
								<http.port>8080</http.port>
								<https.port>8443</https.port>
							</environmentVariables>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<skipTests>${skipIntegrationTests}</skipTests>
							<environmentVariables>
								<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
								<JBOSS_HOME>${project.build.directory}/wildfly-${version.jakartaee8.server.wildfly}</JBOSS_HOME>
								<jboss.home>${project.build.directory}/wildfly-${version.jakartaee8.server.wildfly}</jboss.home>
								<jbossas.startup.timeout>300</jbossas.startup.timeout>
								<http.port>8080</http.port>
								<https.port>8443</https.port>
							</environmentVariables>
							<systemPropertyVariables>
								<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
								<JBOSS_HOME>${project.build.directory}/wildfly-${version.jakartaee8.server.wildfly}</JBOSS_HOME>
								<jboss.home>${project.build.directory}/wildfly-${version.jakartaee8.server.wildfly}</jboss.home>
								<jbossas.startup.timeout>300</jbossas.startup.timeout>
								<http.port>8080</http.port>
								<https.port>8443</https.port>
							</systemPropertyVariables>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-invoker-plugin</artifactId>
						<configuration>
							<cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
							<settingsFile>src/it/settings.xml</settingsFile>
							<localRepositoryPath>${project.build.directory}/it-repo</localRepositoryPath>
							<postBuildHookScript>verify</postBuildHookScript> <!-- no extension required -->
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- wildfly-managed-test -->
		<profile>
			<id>wf-test</id>
			<properties>
				<skipIntegrationTests>false</skipIntegrationTests>
				<webdriverBrowser>chrome</webdriverBrowser>
			</properties>
			<dependencyManagement>
				<dependencies>
					<!-- Jakarta EE Runtime: Wildfly -->
					<dependency>
						<groupId>org.wildfly</groupId>
						<artifactId>wildfly-dist</artifactId>
						<version>${version.jakartaee8.server.wildfly}</version>
						<type>zip</type>
					</dependency>
					<dependency>
						<groupId>org.wildfly</groupId>
						<artifactId>wildfly-parent</artifactId>
						<version>${version.jakartaee8.server.wildfly}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
					<dependency>
						<groupId>org.wildfly</groupId>
						<artifactId>wildfly-feature-pack</artifactId>
						<version>${version.jakartaee8.server.wildfly}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
				<!--
					TODO: https://github.com/arquillian/arquillian-selenium-bom/pull/28
				-->
				<!--
				<dependency>
					<groupId>org.jboss.arquillian.selenium</groupId>
					<artifactId>selenium-bom</artifactId>
					<version>${version.selenium}</version>
					<type>pom</type>
					<scope>import</scope>
				</dependency>
				-->
				<!--
				Selenium Server TODO: https://github.com/arquillian/arquillian-selenium-bom/pull/28
				-->
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-server</artifactId>
					<version>${version.selenium}</version>
				</dependency>

				<!--
				Selenium dependecies
				TODO: https://github.com/arquillian/arquillian-selenium-bom/pull/28
				-->
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-api</artifactId>
					<version>${version.selenium}</version>
				</dependency>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-java</artifactId>
					<version>${version.selenium}</version>
				</dependency>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-support</artifactId>
					<version>${version.selenium}</version>
				</dependency>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-leg-rc</artifactId>
					<version>${version.selenium}</version>
				</dependency>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>lift</artifactId>
					<version>${version.selenium}</version>
				</dependency>

				</dependencies>
			</dependencyManagement>
			<dependencies>
				<!-- -->
				<dependency>
					<groupId>org.wildfly.arquillian</groupId>
					<artifactId>wildfly-arquillian-container-managed</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.wildfly.arquillian</groupId>
					<artifactId>wildfly-arquillian-common</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.wildfly.arquillian</groupId>
					<artifactId>wildfly-arquillian-protocol-jmx</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.wildfly.arquillian</groupId>
					<artifactId>wildfly-arquillian-testenricher-msc</artifactId>
					<scope>test</scope>
				</dependency>
				<!-- -->
				<dependency>
					<groupId>org.jboss.arquillian.graphene</groupId>
					<artifactId>graphene-webdriver-impl</artifactId>
					<version>${version.org.jboss.arquillian.graphene.graphene-webdriver-imple}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.extension</groupId>
					<artifactId>arquillian-drone-impl</artifactId>
					<version>${version.arquillian_drone}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.junit</groupId>
					<artifactId>arquillian-junit-container</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.core</groupId>
					<artifactId>arquillian-core-impl-base</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.config</groupId>
					<artifactId>arquillian-config-impl-base</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
					<version>1.4.01</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.protocol</groupId>
					<artifactId>arquillian-protocol-servlet</artifactId>
					<version>${version.arquillian_core}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.testenricher</groupId>
					<artifactId>arquillian-testenricher-resource</artifactId>
					<version>${version.arquillian_core}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.testenricher</groupId>
					<artifactId>arquillian-testenricher-initialcontext</artifactId>
					<version>${version.arquillian_core}</version>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpcore</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.httpcomponents</groupId>
					<artifactId>httpclient</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-core</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-api</artifactId>
				</dependency>
				<dependency>
					<groupId>org.reflections</groupId>
					<artifactId>reflections</artifactId>
				</dependency>
				<dependency>
					<groupId>org.pcollections</groupId>
					<artifactId>pcollections</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.google.auto</groupId>
					<artifactId>auto-common</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.google.code.findbugs</groupId>
					<artifactId>jFormatString</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.google.code.gson</groupId>
					<artifactId>gson</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-chrome-driver</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-search-engine</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-search-orm</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.primefaces.extensions</groupId>
					<artifactId>primefaces-arquillian</artifactId>
				</dependency>
				<dependency>
					<groupId>org.omnifaces</groupId>
					<artifactId>arquillian-primefaces</artifactId>
				</dependency>
			</dependencies>
			<build>
				<finalName>${project.artifactId}</finalName>
				<defaultGoal>clean install</defaultGoal>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
					<resource>
						<directory>src/main/resources-liberty</directory>
					</resource>
				</resources>
				<pluginManagement>
					<plugins>
					</plugins>
				</pluginManagement>	
				<plugins>
					<plugin>
						<groupId>com.dkanejs.maven.plugins</groupId>
						<artifactId>docker-compose-maven-plugin</artifactId>
						<configuration>
							<composeFile>${project.basedir}/docker-compose.yml</composeFile>
							<verbose>true</verbose>
							<removeImages>true</removeImages>
							<removeVolumes>true</removeVolumes>
							<ignorePullFailures>true</ignorePullFailures>
							<detachedMode>true</detachedMode>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>3.6.2</version>
						<configuration>
							<source>${java.version}</source>
							<target>${java.version}</target>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>3.1.0</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<phase>package</phase>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>3.2.3</version>
						<configuration>
							<warSourceDirectory>src/main/webapp</warSourceDirectory>
							<warName>${project.artifactId}</warName>
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<packagingExcludes>pom.xml</packagingExcludes>
						</configuration>
						<executions>
							<execution>
								<id>make-love-not-war</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>war</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>${version.maven-dependency-plugin}</version>
						<executions>
							<execution>
								<id>unpack</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.wildfly</groupId>
											<artifactId>wildfly-dist</artifactId>
											<version>${version.jakartaee8.server.wildfly}</version>
											<type>zip</type>
											<overWrite>false</overWrite>
											<outputDirectory>${project.build.directory}</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>

							<execution>
								<id>check-dependencies</id>
								<phase>verify</phase>
								<goals>
									<goal>analyze</goal>
									<goal>analyze-dep-mgt</goal>
									<goal>analyze-duplicate</goal>
									<goal>analyze-report</goal>
									<goal>list</goal>
									<goal>list-repositories</goal>
									<goal>properties</goal>
									<goal>tree</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/dependencies</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>get-dependency-sources</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>sources</goal>
									<goal>resolve</goal>
									<goal>resolve-plugins</goal>
									<goal>collect</goal>
									<goal>copy-dependencies</goal>
									<goal>unpack-dependencies</goal>
								</goals>
								<configuration>
									<excludeGroupIds>org.webjars</excludeGroupIds>
									<excludeArtifactIds>weld-probe-core</excludeArtifactIds>
									<classifier>sources</classifier>
									<failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
									<outputDirectory>${project.build.directory}/dependencies/</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
						<version>2.0.1.Final</version>
						<configuration>
							<filename>${project.build.finalName}.war</filename>
							<startupTimeout>300</startupTimeout>
							<timeout>120</timeout>
							<groupId>org.wildfly</groupId>
							<artifactId>wildfly-dist</artifactId>
							<version>${version.jakartaee8.server.wildfly}</version>
							<jbossHome>${project.build.directory}/wildfly-${version.jakartaee8.server.wildfly}</jbossHome>
							<username>admin</username>
							<password>admin.1234</password>
							<add-user>
								<users>
									<user>
										<username>admin</username>
										<password>admin.1234</password>
									</user>
									<user>
										<username>admin-user</username>
										<password>user.1234</password>
										<groups>
											<group>admin</group>
											<group>user</group>
										</groups>
										<application-user>true</application-user>
									</user>
									<user>
										<username>default-user</username>
										<password>user.1234</password>
										<groups>
											<group>user</group>
										</groups>
										<application-user>true</application-user>
									</user>
								</users>
							</add-user>
						</configuration>
						<executions>
							<!--
						<execution>
							<id>deploy-server</id>
							<phase>install</phase>
							<goals>
								<goal>deploy</goal>
							</goals>
						</execution>
		-->
							<execution>
								<id>start-server</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
									<!--
								<goal>deploy</goal>
								-->
								</goals>
							</execution>
							<execution>
								<id>stop-server</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>shutdown</goal>
								</goals>
							</execution>

						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${version.maven-surefire-plugin}</version>
						<dependencies>
							<dependency>
								<groupId>org.apache.maven.surefire</groupId>
								<artifactId>surefire-junit4</artifactId>
								<version>${version.maven-surefire-plugin.junit4}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>test-surefire</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<excludes>
										<exclude>none</exclude>
									</excludes>
									<includes>
										<include>**/IntegrationTest*.java</include>
									</includes>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<skipTests>false</skipTests>
							<environmentVariables>
								<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
								<webdriverBrowser>chrome</webdriverBrowser>
								<JBOSS_HOME>${project.build.directory}/wildfly-${version.jakartaee8.server.wildfly}</JBOSS_HOME>
								<jboss.home>${project.build.directory}/wildfly-${version.jakartaee8.server.wildfly}</jboss.home>
								<jbossas.startup.timeout>300</jbossas.startup.timeout>
								<instantiationTimeoutInSeconds>300</instantiationTimeoutInSeconds>
								<http.port>8080</http.port>
								<https.port>8443</https.port>
								<allowConnectingToRunningServer>true</allowConnectingToRunningServer>
							</environmentVariables>
							<systemPropertyVariables>
								<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
								<webdriverBrowser>chrome</webdriverBrowser>
								<JBOSS_HOME>${project.build.directory}/wildfly-${version.jakartaee8.server.wildfly}</JBOSS_HOME>
								<jboss.home>${project.build.directory}/wildfly-${version.jakartaee8.server.wildfly}</jboss.home>
								<jbossas.startup.timeout>300</jbossas.startup.timeout>
								<instantiationTimeoutInSeconds>300</instantiationTimeoutInSeconds>
								<http.port>8080</http.port>
								<https.port>8443</https.port>
								<allowConnectingToRunningServer>true</allowConnectingToRunningServer>
							</systemPropertyVariables>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>3.0.0-M3</version>
						<configuration>
							<skipTests>false</skipTests>
							<environmentVariables>
								<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
								<webdriverBrowser>chrome</webdriverBrowser>
								<JBOSS_HOME>${project.build.directory}/wildfly-${version.jakartaee8.server.wildfly}</JBOSS_HOME>
								<jboss.home>${project.build.directory}/wildfly-${version.jakartaee8.server.wildfly}</jboss.home>
								<jbossas.startup.timeout>300</jbossas.startup.timeout>
								<instantiationTimeoutInSeconds>300</instantiationTimeoutInSeconds>
								<http.port>8080</http.port>
								<https.port>8443</https.port>
								<allowConnectingToRunningServer>true</allowConnectingToRunningServer>
							</environmentVariables>
							<systemPropertyVariables>
								<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
								<webdriverBrowser>chrome</webdriverBrowser>
								<JBOSS_HOME>${project.build.directory}/wildfly-${version.jakartaee8.server.wildfly}</JBOSS_HOME>
								<jboss.home>${project.build.directory}/wildfly-${version.jakartaee8.server.wildfly}</jboss.home>
								<jbossas.startup.timeout>300</jbossas.startup.timeout>
								<instantiationTimeoutInSeconds>300</instantiationTimeoutInSeconds>
								<http.port>8080</http.port>
								<https.port>8443</https.port>
								<allowConnectingToRunningServer>true</allowConnectingToRunningServer>
							</systemPropertyVariables>
						</configuration>
						<executions>
							<execution>
								<id>install-failsafe</id>
								<phase>install</phase>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- wildfly-remote-run -->
		<profile>
			<id>wf-remote-run</id>
			<dependencyManagement>
				<dependencies>
					<!-- Jakarta EE Runtime: Wildfly -->
					<dependency>
						<groupId>org.wildfly</groupId>
						<artifactId>wildfly-dist</artifactId>
						<version>${version.jakartaee8.server.wildfly}</version>
						<type>zip</type>
					</dependency>
					<dependency>
						<groupId>org.wildfly</groupId>
						<artifactId>wildfly-parent</artifactId>
						<version>${version.jakartaee8.server.wildfly}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
					<dependency>
						<groupId>org.wildfly</groupId>
						<artifactId>wildfly-feature-pack</artifactId>
						<version>${version.jakartaee8.server.wildfly}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
				</dependencies>
			</dependencyManagement>
			<dependencies>

			</dependencies>
			<build>
				<finalName>${project.artifactId}</finalName>
				<defaultGoal>clean install</defaultGoal>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
					<resource>
						<directory>src/main/resources-liberty</directory>
					</resource>
				</resources>
				<pluginManagement>
					<plugins>
					</plugins>
				</pluginManagement>
				<plugins>
				<plugin>
					<groupId>com.dkanejs.maven.plugins</groupId>
					<artifactId>docker-compose-maven-plugin</artifactId>
					<configuration>
						<composeFile>${project.basedir}/docker-compose-wildfly.yml</composeFile>
						<verbose>true</verbose>
						<removeImages>true</removeImages>
						<removeVolumes>true</removeVolumes>
						<ignorePullFailures>true</ignorePullFailures>
						<detachedMode>true</detachedMode>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<executions>

						<execution>
							<id>check-dependencies</id>
							<phase>verify</phase>
							<goals>
								<goal>analyze</goal>
								<goal>analyze-dep-mgt</goal>
								<goal>analyze-duplicate</goal>
								<goal>analyze-report</goal>
								<goal>list</goal>
								<goal>list-repositories</goal>
								<goal>properties</goal>
								<goal>tree</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.directory}/dependencies</outputDirectory>
							</configuration>
						</execution>
						<execution>
							<id>get-dependency-sources</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>sources</goal>
								<goal>resolve</goal>
								<goal>resolve-plugins</goal>
								<goal>collect</goal>
								<goal>copy-dependencies</goal>
								<goal>unpack-dependencies</goal>
							</goals>
							<configuration>
								<excludeGroupIds>org.webjars</excludeGroupIds>
								<excludeArtifactIds>weld-probe-core</excludeArtifactIds>
								<classifier>sources</classifier>
								<failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
								<outputDirectory>${project.build.directory}/dependencies/</outputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.wildfly.plugins</groupId>
					<artifactId>wildfly-maven-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<skipTests>true</skipTests>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<configuration>
						<skipTests>true</skipTests>
					</configuration>
				</plugin>
			</plugins>
		</build>
		</profile>
		<!-- wildfly-remote-test -->
		<profile>
			<id>wf-remote-test</id>
			<dependencyManagement>
				<dependencies>
					<!-- Jakarta EE Runtime: Wildfly -->
					<dependency>
						<groupId>org.wildfly</groupId>
						<artifactId>wildfly-dist</artifactId>
						<version>${version.jakartaee8.server.wildfly}</version>
						<type>zip</type>
					</dependency>
					<dependency>
						<groupId>org.wildfly</groupId>
						<artifactId>wildfly-parent</artifactId>
						<version>${version.jakartaee8.server.wildfly}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
					<dependency>
						<groupId>org.wildfly</groupId>
						<artifactId>wildfly-feature-pack</artifactId>
						<version>${version.jakartaee8.server.wildfly}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
					<dependency>
						<groupId>org.wildfly.arquillian</groupId>
						<artifactId>wildfly-arquillian-container-remote</artifactId>
						<version>${version.jakartaee8.server.wildfly.arquillian}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.wildfly.arquillian</groupId>
						<artifactId>wildfly-arquillian-common</artifactId>
						<version>${version.jakartaee8.server.wildfly.arquillian}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>org.wildfly.arquillian</groupId>
						<artifactId>elytron-standalone</artifactId>
						<version>${version.jakartaee8.server.wildfly.arquillian}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
						<version>${version.commons-logging}</version>
						<scope>test</scope>
					</dependency>
				</dependencies>
			</dependencyManagement>
			<dependencies>
				<dependency>
					<groupId>org.wildfly.arquillian</groupId>
					<artifactId>wildfly-arquillian-container-remote</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.arquillian.protocol</groupId>
					<artifactId>arquillian-protocol-servlet</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.wildfly.arquillian</groupId>
					<artifactId>elytron-standalone</artifactId>
					<scope>test</scope>
				</dependency>
				<!-- logging -->
				<dependency>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
					<scope>test</scope>
				</dependency>
				<!--
				<dependency>
						<groupId>org.jboss.arquillian.graphene</groupId>
						<artifactId>graphene-webdriver-impl</artifactId>
						<scope>test</scope>
				</dependency>
				-->
			</dependencies>
			<build>
				<finalName>${project.artifactId}</finalName>
				<defaultGoal>clean install</defaultGoal>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
					<resource>
						<directory>src/main/resources-liberty</directory>
					</resource>
				</resources>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>com.dkanejs.maven.plugins</groupId>
							<artifactId>docker-compose-maven-plugin</artifactId>
							<version>${version.docker-compose-maven-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-dependency-plugin</artifactId>
							<version>${version.maven-dependency-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-junit4</artifactId>
							<version>${version.maven-surefire-plugin.junit4}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-plugin</artifactId>
							<version>${version.maven-surefire-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-failsafe-plugin</artifactId>
							<version>${version.maven-failsafe-plugin}</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>com.dkanejs.maven.plugins</groupId>
						<artifactId>docker-compose-maven-plugin</artifactId>
						<configuration>
							<composeFile>${project.basedir}/docker-compose-wildfly.yml</composeFile>
							<verbose>true</verbose>
							<removeImages>true</removeImages>
							<removeVolumes>true</removeVolumes>
							<ignorePullFailures>true</ignorePullFailures>
							<detachedMode>true</detachedMode>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>

							<execution>
								<id>check-dependencies</id>
								<phase>verify</phase>
								<goals>
									<goal>analyze</goal>
									<goal>analyze-dep-mgt</goal>
									<goal>analyze-duplicate</goal>
									<goal>analyze-report</goal>
									<goal>list</goal>
									<goal>list-repositories</goal>
									<goal>properties</goal>
									<goal>tree</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/dependencies</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>get-dependency-sources</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>sources</goal>
									<goal>resolve</goal>
									<goal>resolve-plugins</goal>
									<goal>collect</goal>
									<goal>copy-dependencies</goal>
									<goal>unpack-dependencies</goal>
								</goals>
								<configuration>
									<excludeGroupIds>org.webjars</excludeGroupIds>
									<excludeArtifactIds>weld-probe-core</excludeArtifactIds>
									<classifier>sources</classifier>
									<failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
									<outputDirectory>${project.build.directory}/dependencies/</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skipTests>false</skipTests>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<skipTests>false</skipTests>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- profile Glassfish run -->

		<!-- code-schemagen-json-xml -->
		<profile>
			<id>code-schemagen-json-xml</id>
			<dependencyManagement>
				<dependencies></dependencies>
			</dependencyManagement>
			<dependencies></dependencies>
			<build>
				<finalName>${project.artifactId}</finalName>
				<defaultGoal>clean install</defaultGoal>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
					<resource>
						<directory>src/main/resources-liberty</directory>
					</resource>
				</resources>
				<pluginManagement>
					<plugins>

					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>jaxb2-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>schemagen</id>
								<goals>
									<goal>schemagen</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<schemaSourceExcludeFilters>
								<noJaxbIndex implementation="org.codehaus.mojo.jaxb2.shared.filters.pattern.PatternFileFilter">
									<patterns>
										<pattern>org.woehlke.jakartaee.petclinic.application</pattern>
										<pattern>org.woehlke.jakartaee.petclinic.frontend</pattern>
										<pattern>org.woehlke.jakartaee.petclinic.oodm.dao</pattern>
										<pattern>org.woehlke.jakartaee.petclinic.oodm.services</pattern>
										<pattern>org.woehlke.jakartaee.petclinic.oodm.view</pattern>
										<pattern>org.woehlke.jakartaee.petclinic.oodm.entities.listener</pattern>
									</patterns>
								</noJaxbIndex>
							</schemaSourceExcludeFilters>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-invoker-plugin</artifactId>
						<configuration>
							<cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
							<settingsFile>src/it/settings.xml</settingsFile>
							<localRepositoryPath>${project.build.directory}/it-repo</localRepositoryPath>
							<postBuildHookScript>verify</postBuildHookScript> <!-- no extension required -->
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- code-serialver-prepare -->
		<profile>
			<id>code-serialver-prepare</id>
			<dependencyManagement>
				<dependencies></dependencies>
			</dependencyManagement>
			<dependencies>

			</dependencies>
			<build>
				<finalName>${project.artifactId}</finalName>
				<defaultGoal>clean install</defaultGoal>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
					<resource>
						<directory>src/main/resources-liberty</directory>
					</resource>
				</resources>
				<pluginManagement>
					<plugins>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>perform</id>
								<goals>
									<goal>purge-local-repository</goal>
									<goal>resolve</goal>
									<goal>resolve-plugins</goal>
									<goal>sources</goal>
									<goal>unpack-dependencies</goal>
								</goals>
								<configuration>
									<excludeTypes>pom,zip</excludeTypes>
									<outputDirectory>${project.build.directory}/prepareserialver</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>check-dependencies</id>
								<phase>verify</phase>
								<goals>
									<goal>analyze</goal>
									<goal>analyze-dep-mgt</goal>
									<goal>analyze-duplicate</goal>
									<goal>analyze-report</goal>
									<goal>list</goal>
									<goal>list-repositories</goal>
									<goal>properties</goal>
									<goal>tree</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/dependencies</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>get-dependency-sources</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>sources</goal>
									<goal>resolve</goal>
									<goal>resolve-plugins</goal>
									<goal>collect</goal>
									<goal>copy-dependencies</goal>
									<goal>unpack-dependencies</goal>
								</goals>
								<configuration>
									<excludeGroupIds>org.webjars</excludeGroupIds>
									<excludeArtifactIds>weld-probe-core</excludeArtifactIds>
									<classifier>sources</classifier>
									<failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
									<outputDirectory>${project.build.directory}/dependencies/</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<executions>
							<execution>
								<id>prepareserialvercompile</id>
								<phase>compile</phase>
								<goals>
									<goal>compile</goal>
								</goals>
								<configuration>
									<useIncrementalCompilation>false</useIncrementalCompilation>
									<outputDirectory>${project.build.directory}/prepareserialver</outputDirectory>
									<showWarnings>true</showWarnings>
									<failOnWarning>false</failOnWarning>
									<compilerArgs>
										<arg>-Xlint:serial</arg>
									</compilerArgs>
								</configuration>
							</execution>
							<execution>
								<id>prepareserialvertestcompile</id>
								<phase>compile</phase>
								<goals>
									<goal>testCompile</goal>
								</goals>
								<configuration>
									<useIncrementalCompilation>false</useIncrementalCompilation>
									<outputDirectory>${project.build.directory}/prepareserialver</outputDirectory>
									<showWarnings>true</showWarnings>
									<failOnWarning>false</failOnWarning>
									<compilerArgs>
										<arg>-Xlint:serial</arg>
									</compilerArgs>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-invoker-plugin</artifactId>
						<configuration>
							<cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
							<settingsFile>src/it/settings.xml</settingsFile>
							<localRepositoryPath>${project.build.directory}/it-repo</localRepositoryPath>
							<postBuildHookScript>verify</postBuildHookScript> <!-- no extension required -->
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- code-quality -->
		<profile>
			<id>qa</id>
			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>jakarta.platform</groupId>
						<artifactId>jakartaee-api-parent</artifactId>
						<version>${version.jakartaee-api}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
					<dependency>
						<groupId>jakarta.platform</groupId>
						<artifactId>jakarta.jakartaee-bom</artifactId>
						<version>${version.jakartaee-api}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
					<dependency>
						<groupId>jakarta.platform</groupId>
						<artifactId>jakarta.jakartaee-api</artifactId>
						<version>${version.jakartaee-api}</version>
						<scope>provided</scope>
					</dependency>
					<dependency>
						<groupId>jakarta.platform</groupId>
						<artifactId>jakarta.jakartaee-web-api</artifactId>
						<version>${version.jakartaee-api}</version>
						<scope>provided</scope>
					</dependency>
					<!-- Jakarta EE Runtime: OpenLiberty -->
					<dependency>
						<groupId>io.openliberty</groupId>
						<artifactId>openliberty-javaee8</artifactId>
						<version>${version.jakartaee8.server.openliberty}</version>
						<type>zip</type>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>io.openliberty.features</groupId>
						<artifactId>features-bom</artifactId>
						<version>${version.jakartaee8.server.openliberty}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
					<dependency>
						<groupId>io.openliberty.arquillian</groupId>
						<artifactId>arquillian-liberty-managed</artifactId>
						<version>${version.jakartaee8.server.openliberty.arquillian}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>io.openliberty.arquillian</groupId>
						<artifactId>arquillian-liberty-remote</artifactId>
						<version>${version.jakartaee8.server.openliberty.arquillian}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>io.openliberty.arquillian</groupId>
						<artifactId>liberty-support-feature</artifactId>
						<version>${version.jakartaee8.server.openliberty.arquillian}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>net.sourceforge.pmd</groupId>
						<artifactId>pmd</artifactId>
						<version>${version.maven-pmd-plugin.version.pmd}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
					<dependency>
						<groupId>net.sourceforge.pmd</groupId>
						<artifactId>pmd-core</artifactId>
						<version>${version.maven-pmd-plugin.version.pmd}</version>
					</dependency>
					<dependency>
						<groupId>net.sourceforge.pmd</groupId>
						<artifactId>pmd-java</artifactId>
						<version>${version.maven-pmd-plugin.version.pmd}</version>
					</dependency>
					<dependency>
						<groupId>net.sourceforge.pmd</groupId>
						<artifactId>pmd-javascript</artifactId>
						<version>${version.maven-pmd-plugin.version.pmd}</version>
					</dependency>
					<dependency>
						<groupId>net.sourceforge.pmd</groupId>
						<artifactId>pmd-jsp</artifactId>
						<version>${version.maven-pmd-plugin.version.pmd}</version>
					</dependency>
					<dependency>
						<groupId>net.sourceforge.pmd</groupId>
						<artifactId>pmd-xml</artifactId>
						<version>${version.maven-pmd-plugin.version.pmd}</version>
					</dependency>
					<dependency>
						<groupId>net.sourceforge.pmd</groupId>
						<artifactId>pmd-test</artifactId>
						<version>${version.maven-pmd-plugin.version.pmd}</version>
					</dependency>
					<dependency>
						<groupId>net.sourceforge.pmd</groupId>
						<artifactId>pmd-lang-test</artifactId>
						<version>${version.maven-pmd-plugin.version.pmd}</version>
					</dependency>
					<dependency>
						<groupId>net.sourceforge.pmd</groupId>
						<artifactId>pmd-doc</artifactId>
						<version>${version.maven-pmd-plugin.version.pmd}</version>
					</dependency>
					<dependency>
						<groupId>com.dkanejs.maven.plugins</groupId>
						<artifactId>docker-compose-maven-plugin</artifactId>
						<version>${version.docker-compose-maven-plugin}</version>
						<scope>provided</scope>
					</dependency>
					<dependency>
						<groupId>org.projectlombok</groupId>
						<artifactId>lombok</artifactId>
						<version>${version.org.projectlombok.lombok}</version>
						<scope>provided</scope>
					</dependency>
				</dependencies>
			</dependencyManagement>
			<dependencies>
				<dependency>
					<groupId>net.sourceforge.pmd</groupId>
					<artifactId>pmd-core</artifactId>
				</dependency>
				<dependency>
					<groupId>net.sourceforge.pmd</groupId>
					<artifactId>pmd-java</artifactId>
				</dependency>
				<dependency>
					<groupId>net.sourceforge.pmd</groupId>
					<artifactId>pmd-javascript</artifactId>
				</dependency>
				<dependency>
					<groupId>net.sourceforge.pmd</groupId>
					<artifactId>pmd-jsp</artifactId>
				</dependency>
				<dependency>
					<groupId>net.sourceforge.pmd</groupId>
					<artifactId>pmd-xml</artifactId>
				</dependency>
				<dependency>
					<groupId>net.sourceforge.pmd</groupId>
					<artifactId>pmd-test</artifactId>
				</dependency>
				<dependency>
					<groupId>net.sourceforge.pmd</groupId>
					<artifactId>pmd-lang-test</artifactId>
				</dependency>
				<dependency>
					<groupId>net.sourceforge.pmd</groupId>
					<artifactId>pmd-doc</artifactId>
				</dependency>
				<dependency>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-core</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-api</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-slf4j-impl</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-web</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-appserver</artifactId>
				</dependency>
				<dependency>
					<groupId>jakarta.platform</groupId>
					<artifactId>jakarta.jakartaee-api</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty</groupId>
					<artifactId>openliberty-javaee8</artifactId>
					<type>zip</type>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>javaee-8.0</artifactId>
					<type>esa</type>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>sessionDatabase-1.0</artifactId>
					<type>esa</type>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>json-1.0</artifactId>
					<type>esa</type>
					<scope>provided</scope>
				</dependency>
				<!-- shrinkwrap -->
				<dependency>
					<groupId>org.jboss.shrinkwrap.resolver</groupId>
					<artifactId>shrinkwrap-resolver-depchain</artifactId>
					<type>pom</type>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.shrinkwrap.resolver</groupId>
					<artifactId>shrinkwrap-resolver-api-maven-embedded</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-rt-rs-client</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-rt-rs-extension-providers</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>net.jcip</groupId>
					<artifactId>jcip-annotations</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>com.dkanejs.maven.plugins</groupId>
					<artifactId>docker-compose-maven-plugin</artifactId>
					<version>${version.docker-compose-maven-plugin}</version>
				</dependency>
				<dependency>
					<groupId>org.projectlombok</groupId>
					<artifactId>lombok</artifactId>
					<scope>provided</scope>
				</dependency>
			</dependencies>
			<build>
				<defaultGoal>clean install</defaultGoal>
				<finalName>${project.artifactId}</finalName>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-dependency-plugin</artifactId>
							<version>${version.maven-dependency-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-clean-plugin</artifactId>
							<version>${version.maven-clean-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-compiler-plugin</artifactId>
							<version>${version.maven-compiler-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-source-plugin</artifactId>
							<version>${version.maven-source-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>${version.maven-javadoc-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-resources-plugin</artifactId>
							<version>${version.maven-resources-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-install-plugin</artifactId>
							<version>${version.maven-install-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-maven-plugin</artifactId>
							<version>${version.lombok-maven-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-war-plugin</artifactId>
							<version>${version.maven-war-plugin}</version>
						</plugin>
						<plugin>
							<groupId>io.openliberty.tools</groupId>
							<artifactId>liberty-maven-plugin</artifactId>
							<version>${version.liberty-maven-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-junit4</artifactId>
							<version>${version.maven-surefire-plugin.junit4}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-plugin</artifactId>
							<version>${version.maven-surefire-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-failsafe-plugin</artifactId>
							<version>${version.maven-failsafe-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-enforcer-plugin</artifactId>
							<version>${version.maven-enforcer-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-invoker-plugin</artifactId>
							<version>${version.maven-invoker-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-shade-plugin</artifactId>
							<version>${version.maven-shade-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jar-plugin</artifactId>
							<version>${version.maven-jar-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-assembly-plugin</artifactId>
							<version>${version.maven-assembly-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-deploy-plugin</artifactId>
							<version>${version.maven-deploy-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-help-plugin</artifactId>
							<version>${version.maven-help-plugins}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-toolchains-plugin</artifactId>
							<version>${version.maven-toolchains-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-scm-plugin</artifactId>
							<version>${version.org.apache.maven.scm}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-release-plugin</artifactId>
							<version>${version.maven-release-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-checkstyle-plugin</artifactId>
							<version>${version.maven-checkstyle-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-pmd-plugin</artifactId>
							<version>${version.maven-pmd-plugin}</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>check-dependencies</id>
								<phase>verify</phase>
								<goals>
									<goal>analyze</goal>
									<goal>analyze-dep-mgt</goal>
									<goal>analyze-duplicate</goal>
									<goal>analyze-report</goal>
									<goal>list</goal>
									<goal>list-repositories</goal>
									<goal>properties</goal>
									<goal>tree</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/dependencies</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>get-dependency-sources</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>sources</goal>
									<goal>resolve</goal>
									<goal>resolve-plugins</goal>
									<goal>collect</goal>
									<goal>copy-dependencies</goal>
									<goal>unpack-dependencies</goal>
								</goals>
								<configuration>
									<excludeGroupIds>org.webjars</excludeGroupIds>
									<excludeArtifactIds>weld-probe-core</excludeArtifactIds>
									<classifier>sources</classifier>
									<failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
									<outputDirectory>${project.build.directory}/dependencies/</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<configuration>
							<useIncrementalCompilation>false</useIncrementalCompilation>
							<showWarnings>true</showWarnings>
							<compilerArgs>
								<arg>-Xlint:serial</arg>
							</compilerArgs>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-pmd-plugin</artifactId>
						<executions>
							<execution>
								<id>pmd-check</id>
								<phase>package</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<targetJdk>${java.version}</targetJdk>
							<printFailingErrors>true</printFailingErrors>
							<rulesets>
								<ruleset>${project.basedir}/etc/pmd-ruleset.xml</ruleset>
							</rulesets>
							<analysisCache>false</analysisCache>
							<includeTests>true</includeTests>
							<failOnViolation>false</failOnViolation>
						</configuration>
						<dependencies>
							<dependency>
								<groupId>net.sourceforge.pmd</groupId>
								<artifactId>pmd-core</artifactId>
								<version>${version.maven-pmd-plugin.version.pmd}</version>
							</dependency>
							<dependency>
								<groupId>net.sourceforge.pmd</groupId>
								<artifactId>pmd-java</artifactId>
								<version>${version.maven-pmd-plugin.version.pmd}</version>
							</dependency>
							<dependency>
								<groupId>net.sourceforge.pmd</groupId>
								<artifactId>pmd-javascript</artifactId>
								<version>${version.maven-pmd-plugin.version.pmd}</version>
							</dependency>
							<dependency>
								<groupId>net.sourceforge.pmd</groupId>
								<artifactId>pmd-jsp</artifactId>
								<version>${version.maven-pmd-plugin.version.pmd}</version>
							</dependency>
							<dependency>
								<groupId>net.sourceforge.pmd</groupId>
								<artifactId>pmd-xml</artifactId>
								<version>${version.maven-pmd-plugin.version.pmd}</version>
							</dependency>
							<dependency>
								<groupId>net.sourceforge.pmd</groupId>
								<artifactId>pmd-doc</artifactId>
								<version>${version.maven-pmd-plugin.version.pmd}</version>
							</dependency>
							<dependency>
								<groupId>net.sourceforge.pmd</groupId>
								<artifactId>pmd-test</artifactId>
								<version>${version.maven-pmd-plugin.version.pmd}</version>
							</dependency>
							<dependency>
								<groupId>net.sourceforge.pmd</groupId>
								<artifactId>pmd-lang-test</artifactId>
								<version>${version.maven-pmd-plugin.version.pmd}</version>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<configuration>
							<consoleOutput>true</consoleOutput>
							<configLocation>${project.basedir}/etc/checkstyle.xml</configLocation>
						</configuration>
						<executions>
							<execution>
								<id>checkstyle</id>
								<phase>package</phase>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<failOnViolation>false</failOnViolation>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>com.puppycrawl.tools</groupId>
								<artifactId>checkstyle</artifactId>
								<version>${version.com.puppycrawl.tools.checkstyle}</version>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-invoker-plugin</artifactId>
						<configuration>
							<cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
							<settingsFile>src/it/settings.xml</settingsFile>
							<localRepositoryPath>${project.build.directory}/it-repo</localRepositoryPath>
							<postBuildHookScript>verify</postBuildHookScript> <!-- no extension required -->
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- setup -->
		<profile>
			<id>setup</id>
			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>jakarta.platform</groupId>
						<artifactId>jakartaee-api-parent</artifactId>
						<version>${version.jakartaee-api}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
					<dependency>
						<groupId>jakarta.platform</groupId>
						<artifactId>jakarta.jakartaee-bom</artifactId>
						<version>${version.jakartaee-api}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
					<dependency>
						<groupId>jakarta.platform</groupId>
						<artifactId>jakarta.jakartaee-api</artifactId>
						<version>${version.jakartaee-api}</version>
						<scope>provided</scope>
					</dependency>
					<dependency>
						<groupId>jakarta.platform</groupId>
						<artifactId>jakarta.jakartaee-web-api</artifactId>
						<version>${version.jakartaee-api}</version>
						<scope>provided</scope>
					</dependency>
					<!-- Jakarta EE Runtime: OpenLiberty -->
					<dependency>
						<groupId>io.openliberty</groupId>
						<artifactId>openliberty-javaee8</artifactId>
						<version>${version.jakartaee8.server.openliberty}</version>
						<type>zip</type>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>io.openliberty.features</groupId>
						<artifactId>features-bom</artifactId>
						<version>${version.jakartaee8.server.openliberty}</version>
						<type>pom</type>
						<scope>import</scope>
					</dependency>
					<dependency>
						<groupId>io.openliberty.arquillian</groupId>
						<artifactId>arquillian-liberty-managed</artifactId>
						<version>${version.jakartaee8.server.openliberty.arquillian}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>io.openliberty.arquillian</groupId>
						<artifactId>arquillian-liberty-remote</artifactId>
						<version>${version.jakartaee8.server.openliberty.arquillian}</version>
						<scope>test</scope>
					</dependency>
					<dependency>
						<groupId>io.openliberty.arquillian</groupId>
						<artifactId>liberty-support-feature</artifactId>
						<version>${version.jakartaee8.server.openliberty.arquillian}</version>
						<scope>test</scope>
					</dependency>
				</dependencies>
			</dependencyManagement>
			<dependencies>
				<dependency>
					<groupId>io.openliberty</groupId>
					<artifactId>openliberty-javaee8</artifactId>
					<type>zip</type>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>javaee-8.0</artifactId>
					<type>esa</type>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>sessionDatabase-1.0</artifactId>
					<type>esa</type>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>io.openliberty.features</groupId>
					<artifactId>json-1.0</artifactId>
					<type>esa</type>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-core</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-api</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-slf4j-impl</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-web</artifactId>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-appserver</artifactId>
				</dependency>
				<!-- shrinkwrap -->
				<dependency>
					<groupId>org.jboss.shrinkwrap.resolver</groupId>
					<artifactId>shrinkwrap-resolver-depchain</artifactId>
					<type>pom</type>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.jboss.shrinkwrap.resolver</groupId>
					<artifactId>shrinkwrap-resolver-api-maven-embedded</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-rt-rs-client</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-rt-rs-extension-providers</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>net.jcip</groupId>
					<artifactId>jcip-annotations</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<defaultGoal>clean install site site:deploy</defaultGoal>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-dependency-plugin</artifactId>
							<version>${version.maven-dependency-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-clean-plugin</artifactId>
							<version>${version.maven-clean-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-compiler-plugin</artifactId>
							<version>${version.maven-compiler-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-source-plugin</artifactId>
							<version>${version.maven-source-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>${version.maven-javadoc-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-resources-plugin</artifactId>
							<version>${version.maven-resources-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-install-plugin</artifactId>
							<version>${version.maven-install-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-maven-plugin</artifactId>
							<version>${version.lombok-maven-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-war-plugin</artifactId>
							<version>${version.maven-war-plugin}</version>
						</plugin>
						<plugin>
							<groupId>io.openliberty.tools</groupId>
							<artifactId>liberty-maven-plugin</artifactId>
							<version>${version.liberty-maven-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-junit4</artifactId>
							<version>${version.maven-surefire-plugin.junit4}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-plugin</artifactId>
							<version>${version.maven-surefire-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-failsafe-plugin</artifactId>
							<version>${version.maven-failsafe-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-enforcer-plugin</artifactId>
							<version>${version.maven-enforcer-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-shade-plugin</artifactId>
							<version>${version.maven-shade-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jar-plugin</artifactId>
							<version>${version.maven-jar-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-assembly-plugin</artifactId>
							<version>${version.maven-assembly-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-deploy-plugin</artifactId>
							<version>${version.maven-deploy-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-help-plugin</artifactId>
							<version>${version.maven-help-plugins}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-toolchains-plugin</artifactId>
							<version>${version.maven-toolchains-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-scm-plugin</artifactId>
							<version>${version.org.apache.maven.scm}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-release-plugin</artifactId>
							<version>${version.maven-release-plugin}</version>
						</plugin>


						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-site-plugin</artifactId>
							<version>${version.maven-site-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>${version.maven-project-info-reports-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-checkstyle-plugin</artifactId>
							<version>${version.maven-checkstyle-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>findbugs-maven-plugin</artifactId>
							<version>${version.findbugs-maven-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-jxr-plugin</artifactId>
							<version>${version.maven-jxr-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-pmd-plugin</artifactId>
							<version>${version.maven-pmd-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-report-plugin</artifactId>
							<version>${version.maven-surefire-report-plugin}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-invoker-plugin</artifactId>
							<version>${version.maven-invoker-plugin}</version>
						</plugin>

					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>check-dependencies</id>
								<phase>verify</phase>
								<goals>
									<goal>analyze</goal>
									<goal>analyze-dep-mgt</goal>
									<goal>analyze-duplicate</goal>
									<goal>analyze-report</goal>
									<goal>list</goal>
									<goal>list-repositories</goal>
									<goal>properties</goal>
									<goal>tree</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/dependencies</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>get-dependency-sources</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>sources</goal>
									<goal>resolve</goal>
									<goal>resolve-plugins</goal>
									<goal>collect</goal>
									<goal>copy-dependencies</goal>
									<goal>unpack-dependencies</goal>
								</goals>
								<configuration>
									<excludeGroupIds>org.webjars</excludeGroupIds>
									<excludeArtifactIds>weld-probe-core</excludeArtifactIds>
									<classifier>sources</classifier>
									<failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
									<outputDirectory>${project.build.directory}/dependencies/</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>report</id>
								<phase>site</phase>
								<configuration>
									<excludeGroupIds>org.webjars,org.jclouds,org.jboss.as,xml-resolver,commons-configuration,org.codehaus.plexus,commons-digester,junit,log4j</excludeGroupIds>
									<excludeArtifactIds>weld-probe-core,jdk.tools,maven-antrun-plugin</excludeArtifactIds>
									<failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
									<verbose>true</verbose>
									<reportSets>
										<reportSet>
											<reports>
												<report>analyze-report</report>
											</reports>
										</reportSet>
									</reportSets>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.projectlombok</groupId>
						<artifactId>lombok-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>delombok-generate-sources</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>delombok</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<configuration>
							<maxmemory>2048m</maxmemory>
							<source>${java.version}</source>
							<encoding>${project.build.sourceEncoding}</encoding>
						</configuration>
						<executions>
							<execution>
								<id>javadoc-javadoc-package</id>
								<phase>package</phase>
								<goals>
									<goal>javadoc</goal>
								</goals>
								<configuration>
									<linksource>true</linksource>
									<maxmemory>2048m</maxmemory>
									<source>${java.version}</source>
									<encoding>${project.build.sourceEncoding}</encoding>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-scm-plugin</artifactId>
						<configuration>
							<connectionType>developerConnection</connectionType>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-release-plugin</artifactId>
						<configuration>
							<preparationGoals>clean</preparationGoals>
							<autoVersionSubmodules>true</autoVersionSubmodules>
							<goals>install</goals>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-site-plugin</artifactId>
						<inherited>true</inherited>
						<configuration>
							<locales>en</locales>
							<outputDirectory>target/site</outputDirectory>
							<generateReports>true</generateReports>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-invoker-plugin</artifactId>
						<configuration>
							<cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
							<settingsFile>src/it/settings.xml</settingsFile>
							<localRepositoryPath>${project.build.directory}/it-repo</localRepositoryPath>
							<postBuildHookScript>verify</postBuildHookScript> <!-- no extension required -->
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<configuration>
					<skipEmptyReport>true</skipEmptyReport>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<linksource>true</linksource>
					<maxmemory>1024m</maxmemory>
					<source>${java.version}</source>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<configuration>
					<onlyAnalyze>org.woehlke.*</onlyAnalyze>
					<omitVisitors>FindDeadLocalStores</omitVisitors>
					<findbugsXmlOutput>true</findbugsXmlOutput>
					<xmlOutputDirectory>target/site</xmlOutputDirectory>
					<effort>Max</effort>
					<threshold>Low</threshold>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<configuration>
					<minimumTokens>100</minimumTokens>
					<targetJdk>${java.version}</targetJdk>
					<excludeRoots>
						<excludeRoot>target</excludeRoot>
					</excludeRoots>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<configuration>
					<skipFailsafeReport>true</skipFailsafeReport>
					<skipSurefireReport>true</skipSurefireReport>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-invoker-plugin</artifactId>
				<configuration>
					<cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
					<settingsFile>src/it/settings.xml</settingsFile>
					<localRepositoryPath>${project.build.directory}/it-repo</localRepositoryPath>
					<postBuildHookScript>verify</postBuildHookScript> <!-- no extension required -->
				</configuration>
			</plugin>
		</plugins>
	</reporting>

</project>
